{"version":3,"sources":["components/itemDrawer/ItemDrawerStyles.ts","components/itemDrawer/ItemListDrawer.tsx","components/itemDrawer/ItemDrawer.tsx","components/profile/Profile.tsx","components/tables/MainTable.tsx","modules/menu/ResponsiveDrawer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStylesDrawer","makeStyles","theme","createStyles","root","width","maxWidth","backgroundColor","palette","background","paper","nested","paddingLeft","spacing","LinkStyles","link","textDecoration","color","ItemListDrawer","title","listItems","classes","links","useState","open","setOpen","location","useLocation","List","component","aria-labelledby","className","ListItem","button","onClick","ListItemText","primary","Collapse","in","timeout","unmountOnExit","map","item","index","disablePadding","to","Object","keys","selected","matchPath","pathname","values","key","ItemDrawer","useStyles","card","display","flexDirection","justifyContent","margin","img","Profile","anchorEl","setAnchorEl","Boolean","handleClose","IconButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","Typography","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","Button","MainTable","columns","field","type","lookup","34","63","data","name","surname","birthYear","birthCity","state","setState","editable","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice","drawer","breakpoints","up","flexShrink","appBar","marginLeft","menuButton","marginRight","toolbar","mixins","toolbarLogo","alignItems","drawerPaper","content","flexGrow","padding","profile","ResponsiveDrawer","props","container","mobileOpen","setMobileOpen","handleDrawerToggle","classnames","Divider","CssBaseline","AppBar","position","Toolbar","edge","variant","noWrap","Hidden","smUp","implementation","Drawer","anchor","ModalProps","xsDown","paragraph","App","path","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f93c0df4.chunk.js","sourcesContent":["import { makeStyles, createStyles, Theme } from \"@material-ui/core\";\n\nexport const useStylesDrawer = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n  }),\n);\n\nexport const LinkStyles = makeStyles((theme: Theme) =>\ncreateStyles({\n  link: {\n    textDecoration: \"none\",\n    color: 'rgba(0, 0, 0, 0.87)'\n  }\n}))","import React, { useState, FC } from \"react\"\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { useStylesDrawer, LinkStyles } from \"./ItemDrawerStyles\";\nimport { Link, matchPath, useLocation } from \"react-router-dom\";\nimport { IDictionary } from \"../../utils/interfaces\";\n\ninterface IProps {\n  title: string;\n  listItems:  IDictionary<string>[] \n}\n\nexport const ItemListDrawer: FC<IProps> = ({ title, listItems }) => {\n  const classes = useStylesDrawer();\n  const links = LinkStyles();\n  const [open, setOpen] = useState(false);\n\n  const location = useLocation();\n  const handleClick = () => {\n    setOpen(!open);\n  };\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n    >\n      <ListItem button onClick={handleClick}>\n        <ListItemText primary={title} />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        {listItems.map((item, index) => (\n          <List component=\"div\" disablePadding>\n            <Link className={links.link} to={`/${Object.keys(item)[0]}`}>\n              <ListItem\n                button\n                className={classes.nested}\n                selected={!!matchPath(location.pathname, `/${Object.keys(item)[0]}`)}>\n                <ListItemText primary={Object.values(item)[0]} key={index} />\n              </ListItem>\n            </Link>\n          </List>\n        ))}\n      </Collapse>\n\n    </List>\n  )\n}","import React, { FC } from \"react\"\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useStylesDrawer, LinkStyles } from \"./ItemDrawerStyles\";\nimport { Link, useLocation, matchPath } from \"react-router-dom\";\n\ninterface IProps {\n    title: string;\n    link: string;\n}\n\nexport const ItemDrawer: FC<IProps> = ({ title, link }) => {\n    const classes = useStylesDrawer();\n    const links = LinkStyles();\n    const location = useLocation();\n\n    return (\n        <List\n            component=\"nav\"\n            aria-labelledby=\"nested-list-subheader\"\n            className={classes.root}\n        >\n            <Link className={links.link} to={`/${link}`}>\n                <ListItem\n                    button\n                    selected={!!matchPath(location.pathname, `/${link}`)}>\n                    <ListItemText primary={title} />\n                </ListItem>\n            </Link>\n        </List>\n    )\n}","import React, { useState } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { Typography, makeStyles, Theme, createStyles, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        card: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            margin: '10px',\n        },\n        img: {\n            justifyContent: 'center',\n        }\n    }))\n\nexport const Profile = () => {\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n\n    const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    const classes = useStyles();\n\n    return (\n        <div>\n            <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n            >\n                <Typography>Карточка пользователя</Typography>\n            </IconButton>\n            <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n\n            >\n                <div className={classes.card}>\n                    <MenuItem className={classes.img} onClick={handleClose}><AccountCircle /></MenuItem>\n                    <MenuItem onClick={handleClose}>Чолак Александр</MenuItem>\n                    <MenuItem onClick={handleClose}>Админ</MenuItem>\n                    <Button color=\"inherit\">Выйти</Button>\n                </div>\n            </Menu>\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport MaterialTable, { Column } from 'material-table';\n\ninterface Row {\n  name: string;\n  surname: string;\n  birthYear: number;\n  birthCity: number;\n}\n\ninterface TableState {\n  columns: Array<Column<Row>>;\n  data: Row[];\n}\n\nexport const MainTable = () => {\n  const [state, setState] = useState<TableState>({\n    columns: [\n      { title: 'Name', field: 'name' },\n      { title: 'Surname', field: 'surname' },\n      { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\n      {\n        title: 'Birth Place',\n        field: 'birthCity',\n        lookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n      },\n    ],\n    data: [\n      { name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\n      {\n        name: 'Zerya Betül',\n        surname: 'Baran',\n        birthYear: 2017,\n        birthCity: 34,\n      },\n    ],\n  });\n\n  return (\n    <MaterialTable\n      title=\"Editable Example\"\n      columns={state.columns}\n      data={state.data}\n      editable={{\n        onRowAdd: newData =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              setState(prevState => {\n                const data = [...prevState.data];\n                data.push(newData);\n                return { ...prevState, data };\n              });\n            }, 600);\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              if (oldData) {\n                setState(prevState => {\n                  const data = [...prevState.data];\n                  data[data.indexOf(oldData)] = newData;\n                  return { ...prevState, data };\n                });\n              }\n            }, 600);\n          }),\n        onRowDelete: oldData =>\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              setState(prevState => {\n                const data = [...prevState.data];\n                data.splice(data.indexOf(oldData), 1);\n                return { ...prevState, data };\n              });\n            }, 600);\n          }),\n      }}\n    />\n  );\n}","import React, { useState } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Hidden, Button } from '@material-ui/core';\nimport classnames from \"classnames\";\nimport { ItemListDrawer } from '../../components/itemDrawer/ItemListDrawer';\nimport { ItemDrawer } from '../../components/itemDrawer/ItemDrawer';\nimport { IDictionary } from '../../utils/interfaces';\nimport { Profile } from '../../components/profile/Profile';\nimport { MainTable } from '../../components/tables/MainTable';\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    drawer: {\n      [theme.breakpoints.up('sm')]: {\n        width: drawerWidth,\n        flexShrink: 0,\n      },\n    },\n    appBar: {\n      [theme.breakpoints.up('sm')]: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n      },\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n      [theme.breakpoints.up('sm')]: {\n        display: 'none',\n      },\n    },\n    toolbar: theme.mixins.toolbar,\n    toolbarLogo: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    profile: {\n      marginLeft: 'auto',\n      display: 'flex',\n    },\n  }),\n);\ninterface ResponsiveDrawerProps {\n  container?: any;\n}\n\nexport const ResponsiveDrawer = (props: ResponsiveDrawerProps) => {\n  const { container } = props;\n  const classes = useStyles();\n  const [mobileOpen, setMobileOpen] = useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n\n  const directories: IDictionary<string>[] = [\n    { 'pharmacy': 'Аптеки' },\n    { 'preparations': 'Препараты' },\n    { 'code': 'Код АТН' },\n    { 'produced': 'Производители' },\n    { 'region': 'Регионы' },\n    { 'types_region': 'Типы регионов' }]\n  const administration: IDictionary<string>[] = [\n    { 'users': 'Пользователи' },\n    { 'roles': 'Роли' },\n    { 'methods': 'Методы' },\n    { 'access': 'Доступ по ролям' },\n    { 'logs': 'Логи' }]\n  const reports: IDictionary<string>[] = [{ 'charts': 'Графики' }]\n\n  const drawer = (\n    <div>\n      <div className={classnames(classes.toolbar, classes.toolbarLogo)}>ЛОГО</div>\n      <Divider />\n      <ItemDrawer\n        title={\"Главная\"}\n        link={\"main\"}\n      />\n      <ItemDrawer\n        title={\"Продажи\"}\n        link={\"sales\"}\n      />\n      <ItemDrawer\n        title={\"Склады\"}\n        link={\"warehouse\"}\n      />\n      <ItemListDrawer title={\"Отчеты\"} listItems={reports} />\n      <ItemListDrawer title={\"Справочники\"} listItems={directories} />\n      <ItemListDrawer title={\"Администрирование\"} listItems={administration} />\n    </div>\n  );\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Responsive drawer\n          </Typography>\n          <Typography className={classes.profile}>\n            <Profile />\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true,\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Typography paragraph>\n          <MainTable />\n        </Typography>\n      </main>\n    </div>\n  );\n}","import React from \"react\";\nimport \"./App.css\";\nimport { SignIn } from \"./modules/auth/SignIn\";\nimport { ResponsiveDrawer } from \"./modules/menu/ResponsiveDrawer\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\">\n          <ResponsiveDrawer />\n        </Route>\n        {/* <Route path=\"/\">\n          <SignIn />\n        </Route> */}\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}