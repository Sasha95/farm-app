{"version":3,"sources":["resources/boy.svg","modules/auth/SignIn.tsx","components/itemDrawer/ItemDrawerStyles.ts","components/itemDrawer/ItemListDrawer.tsx","components/itemDrawer/ItemDrawer.tsx","components/profile/Profile.tsx","api/mock/sales.ts","modules/sales/Sales.tsx","api/mock/roles.ts","modules/administration/role/Role.tsx","modules/greeting/Greeting.tsx","modules/reports/chart/Chart.tsx","api/mock/pharmacies.ts","modules/directories/pharmacy/Pharmacy.tsx","api/mock/preparations.ts","modules/directories/preparation/Preparations.tsx","modules/directories/ath/ATH.tsx","api/mock/vendors.ts","modules/directories/produced.tsx/Produced.tsx","modules/directories/region/Region.tsx","api/mock/users.ts","modules/administration/user/User.tsx","modules/administration/method/Method.tsx","modules/administration/log/Log.tsx","modules/menu/ResponsiveDrawer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","height","authText","fontWeight","img","SignIn","classes","Container","component","maxWidth","CssBaseline","className","src","boy","alt","Typography","variant","noValidate","TextField","required","fullWidth","id","type","label","name","autoFocus","autoComplete","Button","color","useStylesDrawer","createStyles","root","backgroundColor","palette","background","nested","paddingLeft","LinkStyles","link","textDecoration","ItemListDrawer","title","listItems","links","useState","open","setOpen","location","useLocation","List","aria-labelledby","ListItem","button","onClick","ListItemText","primary","Collapse","in","timeout","unmountOnExit","map","item","index","key","disablePadding","to","Object","keys","selected","matchPath","pathname","values","ItemDrawer","card","justifyContent","Profile","anchorEl","setAnchorEl","Boolean","handleClose","IconButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","sales","amount","date","drug","ath","code","isDeleted","vendor","isDomestic","isGeneric","pharmacy","parentId","region","population","isMode","isNetwork","isType","price","quantity","isDiscount","getOrderDay","rowData","Date","OrderDate","getDay","Sales","dataSource","showRowLines","showBorders","columnAutoWidth","keyExpr","onCellPrepared","e","column","command","addLink","cellElement","querySelector","remove","visible","mode","enabled","defaultPageSize","showPageSizeSelector","allowedPageSizes","showInfo","allowUpdating","allowDeleting","allowAdding","caption","dataField","alignment","dataType","allowHeaderFiltering","calculateFilterExpression","value","selectedFilterOperations","target","roles","Role","Greeting","Chart","pharmacies","Pharmacy","rootValue","parentIdExpr","preparations","Preparations","ATH","vendors","Produced","Region","users","firstName","userName","lastName","role","User","Method","Log","drawer","breakpoints","up","flexShrink","appBar","marginLeft","menuButton","marginRight","toolbar","mixins","toolbarLogo","drawerPaper","content","flexGrow","padding","profile","ResponsiveDrawer","props","container","mobileOpen","setMobileOpen","handleDrawerToggle","classnames","Divider","AppBar","position","Toolbar","edge","noWrap","Hidden","smUp","implementation","Drawer","anchor","ModalProps","xsDown","paragraph","path","NotFoundRedirect","App","exact","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bce43015.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/boy.8547ceae.svg\";","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport boy from \"../../resources/boy.svg\"\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n        height: 45\n    },\n    authText: {\n        marginTop: 20,\n        fontWeight: \"bold\"\n    },\n    img: {\n        width: 150,\n        height: 150,\n    }\n}));\n\nexport const SignIn = () => {\n    const classes = useStyles();\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <img className={classes.img} src={boy} alt=\"boy\" />\n                <Typography className={classes.authText} component=\"h1\" variant=\"h4\">\n                    Авторизация\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"text\"\n                        type=\"text\"\n                        label=\"Логин\"\n                        name=\"text\"\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Пароль\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Войти\n                    </Button>\n                </form>\n            </div>\n        </Container>\n    )\n}\n\n","import { makeStyles, createStyles, Theme } from \"@material-ui/core\";\n\nexport const useStylesDrawer = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n  }),\n);\n\nexport const LinkStyles = makeStyles((theme: Theme) =>\ncreateStyles({\n  link: {\n    textDecoration: \"none\",\n    color: 'rgba(0, 0, 0, 0.87)'\n  }\n}))","import React, { useState, FC } from \"react\"\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { useStylesDrawer, LinkStyles } from \"./ItemDrawerStyles\";\nimport { Link, matchPath, useLocation } from \"react-router-dom\";\nimport { IDictionary } from \"../../utils/interfaces\";\n\ninterface IProps {\n  title: string;\n  listItems:  IDictionary<string>[] \n}\n\nexport const ItemListDrawer: FC<IProps> = ({ title, listItems }) => {\n  const classes = useStylesDrawer();\n  const links = LinkStyles();\n  const [open, setOpen] = useState(true);\n\n  const location = useLocation();\n  const handleClick = () => {\n    setOpen(!open);\n  };\n  return (\n    <List\n      component=\"nav\"\n      aria-labelledby=\"nested-list-subheader\"\n      className={classes.root}\n    >\n      <ListItem button onClick={handleClick}>\n        <ListItemText primary={title} />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        {listItems.map((item, index) => (\n          <List key={index} component=\"div\" disablePadding>\n            <Link className={links.link} to={`/farm-app/${Object.keys(item)[0]}`}>\n              <ListItem\n                button\n                className={classes.nested}\n                selected={!!matchPath(location.pathname, `/${Object.keys(item)[0]}`)}>\n                <ListItemText primary={Object.values(item)[0]} key={index} />\n              </ListItem>\n            </Link>\n          </List>\n        ))}\n      </Collapse>\n\n    </List>\n  )\n}","import React, { FC } from \"react\"\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useStylesDrawer, LinkStyles } from \"./ItemDrawerStyles\";\nimport { Link, useLocation, matchPath } from \"react-router-dom\";\n\ninterface IProps {\n    title: string;\n    link: string;\n}\n\nexport const ItemDrawer: FC<IProps> = ({ title, link }) => {\n    const classes = useStylesDrawer();\n    const links = LinkStyles();\n    const location = useLocation();\n\n    return (\n        <List\n            component=\"nav\"\n            aria-labelledby=\"nested-list-subheader\"\n            className={classes.root}\n        >\n            <Link className={links.link} to={`/farm-app/${link}`}>\n                <ListItem\n                    button\n                    selected={!!matchPath(location.pathname, `/${link}`)}>\n                    <ListItemText primary={title} />\n                </ListItem>\n            </Link>\n        </List>\n    )\n}","import React, { useState } from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport { Typography, makeStyles, Theme, createStyles, Button } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        card: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'center',\n            margin: '10px',\n        },\n        img: {\n            justifyContent: 'center',\n        }\n    }))\n\nexport const Profile = () => {\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n    const open = Boolean(anchorEl);\n\n    const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n    const classes = useStyles();\n\n    return (\n        <div>\n            <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n            >\n                <Typography>Карточка пользователя</Typography>\n            </IconButton>\n            <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n\n            >\n                <div className={classes.card}>\n                    <MenuItem className={classes.img} onClick={handleClose}><AccountCircle /></MenuItem>\n                    <MenuItem onClick={handleClose}>Чолак Александр</MenuItem>\n                    <MenuItem onClick={handleClose}>Админ</MenuItem>\n                    <Button color=\"inherit\">Выйти</Button>\n                </div>\n            </Menu>\n        </div>\n    )\n}","import { ISales } from \"../dto/Sales\";\n\nexport const sales: ISales[] = [\n  {\n    id: 1,\n    amount: 200.48,\n    date: \"2020-03-19 13:33:33\",\n    drug: {\n      id: 1,\n      ath: {\n        id: 1,\n        code: \"FF0A\",\n        name: \"Стамотологические препараты\",\n        isDeleted: false,\n      },\n      name: \"Валерьяныч\",\n      vendor: {\n        id: 1,\n        name: \"ООО «Произв»\",\n        isDomestic: false,\n        isDeleted: false,\n      },\n      isDomestic: false,\n      isGeneric: false,\n      isDeleted: false,\n    },\n    pharmacy: {\n      id: 1,\n      parentId: -1,\n      region: {\n        id: 1,\n        name: \"Тирасполь\",\n        population: 200000,\n        isDeleted: false,\n      },\n      name: \"АПТЪЕКА\",\n      isDeleted: false,\n      isMode: false,\n      isNetwork: true,\n      isType: true,\n    },\n    price: 300.3,\n    quantity: 20,\n    isDeleted: false,\n    isDiscount: true,\n  },\n  {\n    id: 2,\n    amount: 200.48,\n    date: \"2020-02-19 13:33:33\",\n    drug: {\n      id: 2,\n      ath: {\n        id: 2,\n        code: \"FF0A\",\n        name: \"Стамотологические препараты\",\n        isDeleted: false,\n      },\n      name: \"Валерьяныч1\",\n      vendor: {\n        id: 2,\n        name: \"ООО «Произв»\",\n        isDomestic: false,\n        isDeleted: false,\n      },\n      isDomestic: false,\n      isGeneric: false,\n      isDeleted: false,\n    },\n    pharmacy: {\n      id: 2,\n      parentId: -1,\n      region: {\n        id: 2,\n        name: \"Тирасполь\",\n        population: 200000,\n        isDeleted: false,\n      },\n      name: \"АПТЪЕКА1\",\n      isDeleted: false,\n      isMode: false,\n      isNetwork: true,\n      isType: true,\n    },\n    price: 300.3,\n    quantity: 20,\n    isDeleted: false,\n    isDiscount: true,\n  },\n  {\n    id: 3,\n    amount: 200.48,\n    date: \"2020-01-19 13:33:33\",\n    drug: {\n      id: 3,\n      ath: {\n        id: 3,\n        code: \"FF0A\",\n        name: \"Стамотологические препараты\",\n        isDeleted: false,\n      },\n      name: \"Валерьяныч2\",\n      vendor: {\n        id: 3,\n        name: \"ООО «Произв»\",\n        isDomestic: false,\n        isDeleted: false,\n      },\n      isDomestic: false,\n      isGeneric: false,\n      isDeleted: false,\n    },\n    pharmacy: {\n      id: 3,\n      parentId: -1,\n      region: {\n        id: 3,\n        name: \"Тирасполь\",\n        population: 200000,\n        isDeleted: false,\n      },\n      name: \"АПТЪЕКА1\",\n      isDeleted: false,\n      isMode: false,\n      isNetwork: true,\n      isType: true,\n    },\n    price: 300.3,\n    quantity: 20,\n    isDeleted: false,\n    isDiscount: true,\n  },\n  {\n    id: 4,\n    amount: 200.48,\n    date: \"2020-04-19 13:33:33\",\n    drug: {\n      id: 4,\n      ath: {\n        id: 4,\n        code: \"FF0A\",\n        name: \"Стамотологические препараты\",\n        isDeleted: false,\n      },\n      name: \"Валерьяныч3\",\n      vendor: {\n        id: 4,\n        name: \"ООО «Произв»\",\n        isDomestic: false,\n        isDeleted: false,\n      },\n      isDomestic: false,\n      isGeneric: false,\n      isDeleted: false,\n    },\n    pharmacy: {\n      id: 4,\n      parentId: -1,\n      region: {\n        id: 4,\n        name: \"Тирасполь\",\n        population: 200000,\n        isDeleted: false,\n      },\n      name: \"АПТЪЕКА\",\n      isDeleted: false,\n      isMode: false,\n      isNetwork: true,\n      isType: true,\n    },\n    price: 301.3,\n    quantity: 20,\n    isDeleted: false,\n    isDiscount: true,\n  },\n  {\n    id: 5,\n    amount: 200.48,\n    date: \"2020-04-19 13:33:33\",\n    drug: {\n      id: 5,\n      ath: {\n        id: 5,\n        code: \"FF0A\",\n        name: \"Стамотологические препараты\",\n        isDeleted: false,\n      },\n      name: \"Валерьяныч4\",\n      vendor: {\n        id: 5,\n        name: \"ООО «Произв»\",\n        isDomestic: false,\n        isDeleted: false,\n      },\n      isDomestic: false,\n      isGeneric: false,\n      isDeleted: false,\n    },\n    pharmacy: {\n      id: 5,\n      parentId: -1,\n      region: {\n        id: 5,\n        name: \"Тирасполь\",\n        population: 200000,\n        isDeleted: false,\n      },\n      name: \"АПТЪЕКА\",\n      isDeleted: false,\n      isMode: false,\n      isNetwork: true,\n      isType: true,\n    },\n    price: 300.3,\n    quantity: 20,\n    isDeleted: false,\n    isDiscount: true,\n  },\n  {\n    id: 6,\n    amount: 200.48,\n    date: \"2020-04-19 13:33:33\",\n    drug: {\n      id: 6,\n      ath: {\n        id: 6,\n        code: \"FF0A\",\n        name: \"Стамотологические препараты\",\n        isDeleted: false,\n      },\n      name: \"Валерьяныч4\",\n      vendor: {\n        id: 6,\n        name: \"ООО «Произв»\",\n        isDomestic: false,\n        isDeleted: false,\n      },\n      isDomestic: false,\n      isGeneric: false,\n      isDeleted: false,\n    },\n    pharmacy: {\n      id: 6,\n      parentId: -1,\n      region: {\n        id: 6,\n        name: \"Тирасполь\",\n        population: 200000,\n        isDeleted: false,\n      },\n      name: \"АПТЪЕКА\",\n      isDeleted: false,\n      isMode: false,\n      isNetwork: true,\n      isType: true,\n    },\n    price: 300.3,\n    quantity: 20,\n    isDeleted: false,\n    isDiscount: true,\n  },\n];\n","import React from \"react\"\nimport { Typography } from \"@material-ui/core\"\nimport TreeList, { Editing, SearchPanel, Column, RequiredRule, Selection, Sorting, Scrolling, Paging, Pager, HeaderFilter, FilterRow } from \"devextreme-react/tree-list\"\nimport { sales } from \"../../api/mock/sales\"\n\nfunction getOrderDay(rowData: any) {\n    return (new Date(rowData.OrderDate)).getDay();\n}\n\nexport const Sales = () => {\n    const allowedPageSizes = [5, 10, 20];\n    const onCellPrepared = (e: any) => {\n        if (e.column.command === 'edit') {\n            let addLink = e.cellElement.querySelector('.dx-link-add');\n\n            if (addLink) {\n                addLink.remove();\n            }\n        }\n    }\n\n    const calculateFilterExpression = (value: any, selectedFilterOperations: any, target: any) => {\n        let column = 'date';\n        if (target === 'headerFilter' && value === 'weekends') {\n            return [[getOrderDay, '=', 0], 'or', [getOrderDay, '=', 6]];\n        }\n        // return column.defaultCalculateFilterExpression.apply('date', arguments);\n    }\n    const orderHeaderFilter = (data: any) => {\n        data.dataSource.postProcess = (results: any) => {\n            results.push({\n                text: 'Weekends',\n                value: 'weekends'\n            });\n            return results;\n        };\n    }\n    return (\n        <Typography>\n            <TreeList\n                id=\"sales\"\n                dataSource={sales}\n                showRowLines={true}\n                showBorders={true}\n                columnAutoWidth={true}\n                keyExpr=\"id\"\n                onCellPrepared={onCellPrepared}\n            >\n                <HeaderFilter visible={true} />\n                {/* <FilterRow applyFilter={{\n                    key: 'auto',\n                    name: 'Immediately'\n                }}\n                    visible={true}\n                /> */}\n                <Scrolling mode=\"standard\" />\n                <Paging\n                    enabled={true}\n                    defaultPageSize={5} />\n                <Pager\n                    showPageSizeSelector={true}\n                    allowedPageSizes={allowedPageSizes}\n                    showInfo={true} />\n                <Sorting mode=\"multiple\" />\n                <Selection mode=\"single\" />\n                <SearchPanel visible={true} />\n                <Editing\n                    allowUpdating={true}\n                    allowDeleting={true}\n                    allowAdding={true}\n                    mode=\"row\"\n                />\n                <Column\n                    caption={\"Номер\"}\n                    visible={false}\n                    dataField={\"id\"}>\n                </Column>\n                <Column\n                    caption={\"Название препарата\"}\n                    dataField={\"drug.name\"}>\n                    <RequiredRule />\n                </Column>\n                <Column\n                    caption={\"Название аптеки\"}\n                    dataField={\"pharmacy.name\"}>\n                    <RequiredRule />\n                </Column>\n                <Column\n                    alignment=\"right\"\n                    dataType=\"date\"\n                    allowHeaderFiltering={false}\n                    calculateFilterExpression={calculateFilterExpression}\n                    caption={\"Дата продажи\"}\n                    dataField={\"date\"}>\n                    <RequiredRule />\n                    {/* <HeaderFilter dataSource={orderHeaderFilter} /> */}\n                </Column>\n                <Column\n                    allowHeaderFiltering={false}\n                    caption={\"Цена за ед.\"}\n                    dataField={\"price\"}>\n                    <RequiredRule />\n                </Column>\n                <Column\n                    allowHeaderFiltering={false}\n                    caption={\"Кол-во\"}\n                    dataField={\"quantity\"}>\n                    <RequiredRule />\n                </Column>\n                <Column\n                    allowHeaderFiltering={false}\n                    caption={\"Сумма\"}\n                    dataField={\"amount\"}>\n                    <RequiredRule />\n                </Column>\n                <Column\n                    allowHeaderFiltering={false}\n                    caption={\"Дисконт\"}\n                    dataType=\"boolean\"\n                    dataField={\"isDiscount\"}>\n                </Column>\n                <Column\n                    allowHeaderFiltering={false}\n                    caption={\"Удалена\"}\n                    dataType=\"boolean\"\n                    dataField={\"isDeleted\"}>\n                </Column>\n            </TreeList>\n        </Typography>\n    )\n}\n","import { IRole } from \"../dto/Role\";\n\nexport const roles: IRole[] = [\n  {\n    id: 1,\n    name: \"Админ\",\n    isDeleted: false,\n  },\n  {\n    id: 2,\n    name: \"Юзер\",\n    isDeleted: false,\n  },\n  {\n    id: 3,\n    name: \"Аноним\",\n    isDeleted: true,\n  },\n  {\n    id: 4,\n    name: \"Модератор\",\n    isDeleted: false,\n  },\n];\n","import React from \"react\"\nimport { Typography } from \"@material-ui/core\"\nimport TreeList, { Editing, SearchPanel, Column, RequiredRule, Selection, Sorting } from \"devextreme-react/tree-list\"\nimport { roles } from \"../../../api/mock/roles\"\n\nexport const Role = () => {\n    return (\n        <Typography>\n            <TreeList\n                id=\"roles\"\n                dataSource={roles}\n                showRowLines={true}\n                showBorders={true}\n                columnAutoWidth={true}\n                keyExpr=\"id\"\n            >\n                <Sorting mode=\"multiple\" />\n                <Selection mode=\"single\" />\n                <SearchPanel visible={true} />\n                <Editing\n                    allowUpdating={true}\n                    allowDeleting={true}\n                    mode=\"row\"\n                />\n                <Column\n                    caption={\"Номер\"}\n                    dataType={\"number\"}\n                    visible={false}\n                    dataField={\"id\"}>\n                    <RequiredRule />\n                </Column>\n                <Column\n                    caption={\"Имя роли\"}\n                    dataType={\"string\"}\n                    dataField={\"name\"}>\n                    <RequiredRule />\n                </Column>\n                <Column\n                    caption={\"Удалена\"}\n                    dataType=\"boolean\"\n                    dataField={\"isDeleted\"}>\n                </Column>\n            </TreeList>\n        </Typography>\n    )\n}","import React from \"react\"\nimport { Typography } from \"@material-ui/core\"\n\nexport const Greeting = () => {\n    return(\n        <Typography>\n            Тут будет приветствие\n        </Typography>\n    )\n}","import React from \"react\"\n\nexport const Chart = () => {\n    return(\n        <div>\n            Графики!!!\n        </div>\n    )\n}","import { IPharmacy } from \"../dto/Pharmacy\";\n\nexport const pharmacies: IPharmacy[] = [\n  {\n    id: 1,\n    parentId: -1,\n    region: {\n      id: 1,\n      name: \"Тирасполь\",\n      population: 200000,\n      isDeleted: false,\n    },\n    name: \"АПТЪЕКА\",\n    isDeleted: false,\n    isMode: false,\n    isNetwork: true,\n    isType: true,\n  },\n  {\n    id: 2,\n    parentId: 1,\n    region: {\n      id: 2,\n      name: \"Тирасполь\",\n      population: 200000,\n      isDeleted: false,\n    },\n    name: \"АПТЪЕКА\",\n    isDeleted: false,\n    isMode: false,\n    isNetwork: true,\n    isType: true,\n  },\n  {\n    id: 3,\n    parentId: 1,\n    region: {\n      id: 3,\n      name: \"Тирасполь\",\n      population: 200000,\n      isDeleted: false,\n    },\n    name: \"АПТЪЕКА\",\n    isDeleted: false,\n    isMode: false,\n    isNetwork: true,\n    isType: true,\n  },\n  {\n    id: 4,\n    parentId: 3,\n    region: {\n      id: 4,\n      name: \"Бендеры\",\n      population: 200000,\n      isDeleted: false,\n    },\n    name: \"АПТЪЕКА\",\n    isDeleted: false,\n    isMode: false,\n    isNetwork: true,\n    isType: true,\n  },\n  {\n    id: 5,\n    parentId: 3,\n    region: {\n      id: 5,\n      name: \"Тирасполь\",\n      population: 200000,\n      isDeleted: false,\n    },\n    name: \"АПТЪЕКА\",\n    isDeleted: false,\n    isMode: false,\n    isNetwork: true,\n    isType: true,\n  },\n  {\n    id: 6,\n    parentId: 5,\n    region: {\n      id: 6,\n      name: \"Тирасполь\",\n      population: 200000,\n      isDeleted: false,\n    },\n    name: \"АПТЪЕКА\",\n    isDeleted: false,\n    isMode: false,\n    isNetwork: true,\n    isType: true,\n  },\n];\n","import React from \"react\"\nimport { Typography } from \"@material-ui/core\"\nimport TreeList, { Editing, SearchPanel, Column, RequiredRule, Selection, Sorting, FilterRow, Pager, Paging, Scrolling } from \"devextreme-react/tree-list\"\nimport { pharmacies } from \"../../../api/mock/pharmacies\"\n\nexport const Pharmacy = () => {\n    const allowedPageSizes = [5, 10, 20];\n    const onCellPrepared = (e: any) => {\n        if (e.column.command === 'edit') {\n            let addLink = e.cellElement.querySelector('.dx-link-add');\n\n            if (addLink) {\n                addLink.remove();\n            }\n        }\n    }\n    return (\n        <Typography>\n            <TreeList\n                id=\"pharmacies\"\n                dataSource={pharmacies}\n                showRowLines={true}\n                showBorders={true}\n                columnAutoWidth={true}\n                keyExpr=\"id\"\n                rootValue={1}\n                parentIdExpr=\"parentId\"\n                onCellPrepared={onCellPrepared}\n            >\n                <Scrolling mode=\"standard\" />\n                <Paging\n                    enabled={true}\n                    defaultPageSize={5} />\n                <Pager\n                    showPageSizeSelector={true}\n                    allowedPageSizes={allowedPageSizes}\n                    showInfo={true} />\n                <FilterRow visible={true} />\n                <Sorting mode=\"multiple\" />\n                <Selection mode=\"single\" />\n                <SearchPanel visible={true} />\n                <Editing\n                    allowUpdating={true}\n                    allowDeleting={true}\n                    allowAdding={true}\n                    mode=\"row\"\n                />\n                <Column\n                    caption={\"Номер\"}\n                    dataType={\"number\"}\n                    visible={false}\n                    dataField={\"id\"}>\n                    <RequiredRule />\n                </Column>\n                <Column\n                    caption={\"Название аптеки\"}\n                    dataType={\"string\"}\n                    dataField={\"name\"}>\n                    <RequiredRule />\n                </Column>\n                <Column\n                    caption={\"Имя региона\"}\n                    dataType={\"string\"}\n                    dataField={\"region.name\"}>\n                    <RequiredRule />\n                </Column>\n                <Column\n                    caption={\"Круглосуточная\"}\n                    dataType=\"boolean\"\n                    dataField={\"isMode\"}>\n                </Column>\n                <Column\n                    caption={\"Социальная\"}\n                    dataType=\"boolean\"\n                    dataField={\"isType\"}>\n                </Column>\n                <Column\n                    caption={\"Сеть аптек\"}\n                    dataType=\"boolean\"\n                    dataField={\"isNetwork\"}>\n                </Column>\n                <Column\n                    caption={\"Удалена\"}\n                    dataType=\"boolean\"\n                    dataField={\"isDeleted\"}>\n                </Column>\n            </TreeList>\n        </Typography>\n    )\n}","import { IDrug } from \"../dto/Drug\";\n\nexport const preparations: IDrug[] = [\n  {\n    id: 1,\n    name: \"Валерьяныч\",\n    isDeleted: false,\n    isDomestic: true,\n    isGeneric: false,\n    ath: {\n      id: 1,\n      name: \"Стамотологические препараты\",\n      code: \"A01\",\n      isDeleted: false,\n    },\n    vendor: {\n      id: 1,\n      name: \"ООО «Произв1»\",\n      isDeleted: false,\n      isDomestic: true,\n    },\n  },\n  {\n    id: 2,\n    name: \"Валерьяныч\",\n    isDeleted: false,\n    isDomestic: true,\n    isGeneric: false,\n    ath: {\n      id: 2,\n      name: \"Стамотологические препараты\",\n      code: \"A01\",\n      isDeleted: false,\n    },\n    vendor: {\n      id: 2,\n      name: \"ООО «Произв»\",\n      isDeleted: false,\n      isDomestic: true,\n    },\n  },\n  {\n    id: 3,\n    name: \"Валерьяныч\",\n    isDeleted: false,\n    isDomestic: true,\n    isGeneric: false,\n    ath: {\n      id: 1,\n      name: \"Стамотологические препараты\",\n      code: \"A01\",\n      isDeleted: false,\n    },\n    vendor: {\n      id: 1,\n      name: \"ООО «Произв»\",\n      isDeleted: false,\n      isDomestic: true,\n    },\n  },\n  {\n    id: 4,\n    name: \"Валерьяныч\",\n    isDeleted: false,\n    isDomestic: true,\n    isGeneric: false,\n    ath: {\n      id: 1,\n      name: \"Стамотологические препараты\",\n      code: \"A01\",\n      isDeleted: false,\n    },\n    vendor: {\n      id: 5,\n      name: \"ООО «Произв»\",\n      isDeleted: false,\n      isDomestic: true,\n    },\n  },\n  {\n    id: 4,\n    name: \"Валерьяныч\",\n    isDeleted: false,\n    isDomestic: true,\n    isGeneric: false,\n    ath: {\n      id: 1,\n      name: \"Стамотологические препараты\",\n      code: \"A01\",\n      isDeleted: false,\n    },\n    vendor: {\n      id: 1,\n      name: \"ООО «Произв»\",\n      isDeleted: false,\n      isDomestic: true,\n    },\n  },\n  {\n    id: 5,\n    name: \"Валерьяныч\",\n    isDeleted: false,\n    isDomestic: true,\n    isGeneric: false,\n    ath: {\n      id: 5,\n      name: \"Стамотологические препараты\",\n      code: \"A01\",\n      isDeleted: false,\n    },\n    vendor: {\n      id: 5,\n      name: \"ООО «Произв»\",\n      isDeleted: false,\n      isDomestic: true,\n    },\n  },\n  {\n    id: 6,\n    name: \"Валерьяныч\",\n    isDeleted: false,\n    isDomestic: true,\n    isGeneric: false,\n    ath: {\n      id: 1,\n      name: \"Стамотологические препараты\",\n      code: \"A01\",\n      isDeleted: false,\n    },\n    vendor: {\n      id: 2,\n      name: \"ООО «Произв»\",\n      isDeleted: false,\n      isDomestic: true,\n    },\n  },\n  {\n    id: 7,\n    name: \"Валерьяныч\",\n    isDeleted: false,\n    isDomestic: true,\n    isGeneric: false,\n    ath: {\n      id: 3,\n      name: \"Стамотологические препараты\",\n      code: \"A01\",\n      isDeleted: false,\n    },\n    vendor: {\n      id: 1,\n      name: \"ООО «Произв»\",\n      isDeleted: false,\n      isDomestic: true,\n    },\n  },\n];\n","import React from \"react\"\nimport { Typography } from \"@material-ui/core\"\nimport TreeList, { Editing, SearchPanel, Column, RequiredRule, Selection, Sorting, Scrolling, Paging, Pager, FilterRow } from \"devextreme-react/tree-list\"\nimport { preparations } from \"../../../api/mock/preparations\"\n\nexport const Preparations = () => {\n    const allowedPageSizes = [5, 10, 20];\n    const onCellPrepared = (e: any) => {\n        if (e.column.command === 'edit') {\n            let addLink = e.cellElement.querySelector('.dx-link-add');\n\n            if (addLink) {\n                addLink.remove();\n            }\n        }\n    }\n    return (\n        <Typography>\n            <TreeList\n                id=\"preparations\"\n                dataSource={preparations}\n                showRowLines={true}\n                showBorders={true}\n                columnAutoWidth={true}\n                keyExpr=\"id\"\n                onCellPrepared={onCellPrepared}\n            >\n                <Scrolling mode=\"standard\" />\n                <Paging\n                    enabled={true}\n                    defaultPageSize={5} />\n                <Pager\n                    showPageSizeSelector={true}\n                    allowedPageSizes={allowedPageSizes}\n                    showInfo={true} />\n                <FilterRow visible={true} />\n                <Sorting mode=\"multiple\" />\n                <Selection mode=\"single\" />\n                <SearchPanel visible={true} />\n                <Editing\n                    allowUpdating={true}\n                    allowDeleting={true}\n                    allowAdding={true}\n                    mode=\"row\"\n                />\n                <Column\n                    caption={\"Номер\"}\n                    visible={false}\n                    dataField={\"id\"}>\n                </Column>\n                <Column\n                    caption={\"Имя группы Атх\"}\n                    dataField={\"ath.name\"}>\n                    <RequiredRule />\n                </Column>\n\n                <Column\n                    caption={\"Код группы Атх\"}\n                    dataField={\"ath.code\"}>\n                    <RequiredRule />\n                </Column>\n                <Column\n                    caption={\"Имя производителя\"}\n                    dataField={\"vendor.name\"}>\n                    <RequiredRule />\n                </Column>\n                <Column\n                    caption={\"Отечесвтенный\"}\n                    dataField={\"isDomestic\"}>\n                    <RequiredRule />\n                </Column>\n                <Column\n                    caption={\"Generic\"}\n                    dataField={\"isGeneric\"}>\n                    <RequiredRule />\n                </Column>\n                <Column\n                    caption={\"Удалена\"}\n                    dataType=\"boolean\"\n                    dataField={\"isDeleted\"}>\n                </Column>\n            </TreeList>\n        </Typography>\n    )\n}","import React from \"react\"\n\nexport const ATH = () => {\n    return(\n        <div>\n            Код АТН!!!\n        </div>\n    )\n}","import { IVendor } from \"../dto/Vendor\";\n\nexport const vendors: IVendor[] = [\n  {\n    id: 1,\n    name: \"ООО «Произв»\",\n    isDomestic: true,\n    isDeleted: false,\n  },\n  {\n    id: 2,\n    name: \"ООО «Произв1»\",\n    isDomestic: true,\n    isDeleted: false,\n  },\n  {\n    id: 2,\n    name: \"ООО «Произв»\",\n    isDomestic: true,\n    isDeleted: false,\n  },\n  {\n    id: 3,\n    name: \"ООО «Произв1»\",\n    isDomestic: true,\n    isDeleted: true,\n  },\n  {\n    id: 4,\n    name: \"ООО «Произв»\",\n    isDomestic: true,\n    isDeleted: true,\n  },\n  {\n    id: 5,\n    name: \"ООО «Произв2»\",\n    isDomestic: false,\n    isDeleted: false,\n  },\n  {\n    id: 6,\n    name: \"ООО «Произв2»\",\n    isDomestic: false,\n    isDeleted: true,\n  },\n  {\n    id: 7,\n    name: \"ООО «Произв»\",\n    isDomestic: true,\n    isDeleted: false,\n  },\n  {\n    id: 8,\n    name: \"ООО «Произв»\",\n    isDomestic: true,\n    isDeleted: false,\n  },\n  {\n    id: 9,\n    name: \"ООО «Произв»\",\n    isDomestic: true,\n    isDeleted: false,\n  },\n];\n","import React from \"react\"\nimport { Typography } from \"@material-ui/core\"\nimport TreeList, { Editing, SearchPanel, Column, RequiredRule, Selection, Sorting, Scrolling, Paging, Pager, FilterRow } from \"devextreme-react/tree-list\"\nimport { vendors } from \"../../../api/mock/vendors\"\n\nexport const Produced = () => {\n    const allowedPageSizes = [5, 10, 20];\n    const onCellPrepared = (e: any) => {\n        if (e.column.command === 'edit') {\n            let addLink = e.cellElement.querySelector('.dx-link-add');\n\n            if (addLink) {\n                addLink.remove();\n            }\n        }\n    }\n    return (\n        <Typography>\n            <TreeList\n                id=\"vendors\"\n                dataSource={vendors}\n                showRowLines={true}\n                showBorders={true}\n                columnAutoWidth={true}\n                keyExpr=\"id\"\n                onCellPrepared={onCellPrepared}\n            >\n                <Scrolling mode=\"standard\" />\n                <Paging\n                    enabled={true}\n                    defaultPageSize={5} />\n                <Pager\n                    showPageSizeSelector={true}\n                    allowedPageSizes={allowedPageSizes}\n                    showInfo={true} />\n                <Sorting mode=\"multiple\" />\n                <Selection mode=\"single\" />\n                <SearchPanel visible={true} />\n                <Editing\n                    allowUpdating={true}\n                    allowDeleting={true}\n                    allowAdding={true}\n                    mode=\"row\"\n                />\n                <Column\n                    caption={\"Номер\"}\n                    visible={false}\n                    dataField={\"id\"}>\n                </Column>\n                <Column\n                    caption={\"Имя производителя\"}\n                    dataField={\"name\"}>\n                    <RequiredRule />\n                </Column>\n                <Column\n                    caption={\"Отечесвтенный\"}\n                    dataField={\"isDomestic\"}>\n                    <RequiredRule />\n                </Column>\n                <Column\n                    caption={\"Удалена\"}\n                    dataType=\"boolean\"\n                    dataField={\"isDeleted\"}>\n                </Column>\n            </TreeList>\n        </Typography>\n    )\n}","import React from \"react\"\n\nexport const Region = () => {\n    return(\n        <div>\n            Регионы!!!\n        </div>\n    )\n}","import { IUser } from \"../dto/User\";\n\nexport const users: IUser[] = [\n  {\n    id: 1,\n    firstName: \"Петров\",\n    userName: \"Вася\",\n    lastName: \"Петрович\",\n    role: {\n      id: 1,\n      name: \"Админ\",\n      isDeleted: false,\n    },\n  },\n  {\n    id: 2,\n    firstName: \"Петров1\",\n    userName: \"Вася1\",\n    lastName: \"Петрович1\",\n    role: {\n      id: 2,\n      name: \"Юзер\",\n      isDeleted: false,\n    },\n  },\n  {\n    id: 3,\n    firstName: \"Петров1\",\n    userName: \"Вася1\",\n    lastName: \"Петрович1\",\n    role: {\n      id: 2,\n      name: \"Юзер\",\n      isDeleted: false,\n    },\n  },\n  {\n    id: 4,\n    firstName: \"Петров1\",\n    userName: \"Вася1\",\n    lastName: \"Петрович1\",\n    role: {\n      id: 2,\n      name: \"Юзер\",\n      isDeleted: false,\n    },\n  },\n  {\n    id: 5,\n    firstName: \"Петров1\",\n    userName: \"Вася1\",\n    lastName: \"Петрович1\",\n    role: {\n      id: 2,\n      name: \"Юзер\",\n      isDeleted: false,\n    },\n  },\n  {\n    id: 6,\n    firstName: \"Петров1\",\n    userName: \"Вася1\",\n    lastName: \"Петрович1\",\n    role: {\n      id: 2,\n      name: \"Юзер\",\n      isDeleted: false,\n    },\n  },\n  {\n    id: 7,\n    firstName: \"Петров1\",\n    userName: \"Вася1\",\n    lastName: \"Петрович1\",\n    role: {\n      id: 4,\n      name: \"Модератор\",\n      isDeleted: false,\n    },\n  },\n  {\n    id: 8,\n    firstName: \"Петров1\",\n    userName: \"Вася1\",\n    lastName: \"Петрович1\",\n    role: {\n      id: 2,\n      name: \"Юзер\",\n      isDeleted: true,\n    },\n  },\n  {\n    id: 9,\n    firstName: \"Андрей\",\n    userName: \"Вася1\",\n    lastName: \"Андреевич1\",\n    role: {\n      id: 2,\n      name: \"Юзер\",\n      isDeleted: false,\n    },\n  },\n  {\n    id: 10,\n    firstName: \"Петров1\",\n    userName: \"Вася1\",\n    lastName: \"Петрович1\",\n    role: {\n      id: 4,\n      name: \"Модератор\",\n      isDeleted: true,\n    },\n  },\n  {\n    id: 11,\n    firstName: \"Петров1\",\n    userName: \"Коля\",\n    lastName: \"Петрович1\",\n    role: {\n      id: 2,\n      name: \"Юзер\",\n      isDeleted: false,\n    },\n  },\n  {\n    id: 12,\n    firstName: \"Петров1\",\n    userName: \"Вася1\",\n    lastName: \"Петрович1\",\n    role: {\n      id: 2,\n      name: \"Юзер\",\n      isDeleted: false,\n    },\n  },\n  {\n    id: 13,\n    firstName: \"Петров1\",\n    userName: \"Вася1\",\n    lastName: \"Петрович1\",\n    role: {\n      id: 2,\n      name: \"Юзер\",\n      isDeleted: false,\n    },\n  },\n  {\n    id: 14,\n    firstName: \"Петров1\",\n    userName: \"Вася1\",\n    lastName: \"Петрович1\",\n    role: {\n      id: 2,\n      name: \"Юзер\",\n      isDeleted: true,\n    },\n  },\n  {\n    id: 15,\n    firstName: \"Петров1\",\n    userName: \"Вася1\",\n    lastName: \"Петрович1\",\n    role: {\n      id: 4,\n      name: \"Модератор\",\n      isDeleted: false,\n    },\n  },\n];\n","import React from \"react\"\nimport { Typography } from \"@material-ui/core\"\nimport TreeList, { Editing, SearchPanel, Column, RequiredRule, Selection, Sorting, Scrolling, Paging, Pager } from \"devextreme-react/tree-list\"\nimport { users } from \"../../../api/mock/users\"\n\nconst allowedPageSizes = [5, 10, 20];\n\nexport const User = () => {\n    const onCellPrepared = (e: any) => {\n        if (e.column.command === 'edit') {\n            let addLink = e.cellElement.querySelector('.dx-link-add');\n\n            if (addLink) {\n                addLink.remove();\n            }\n        }\n    }\n\n    return (\n        <Typography>\n            <TreeList\n                id=\"roles\"\n                dataSource={users}\n                showRowLines={true}\n                showBorders={true}\n                columnAutoWidth={true}\n                keyExpr=\"id\"\n                onCellPrepared={onCellPrepared}\n            >\n                <Scrolling mode=\"standard\" />\n                <Paging\n                    enabled={true}\n                    defaultPageSize={5} />\n                <Pager\n                    showPageSizeSelector={true}\n                    allowedPageSizes={allowedPageSizes}\n                    showInfo={true} />\n                <Sorting mode=\"multiple\" />\n                <Selection mode=\"single\" />\n                <SearchPanel visible={true} />\n                <Editing\n                    allowUpdating={true}\n                    allowDeleting={true}\n                    allowAdding={true}\n                    mode=\"row\"\n                />\n                <Column\n                    caption={\"Номер\"}\n                    visible={false}\n                    dataField={\"id\"}>\n                </Column>\n                <Column\n                    caption={\"Фамилия\"}\n                    dataField={\"firstName\"}>\n                    <RequiredRule />\n                </Column>\n                <Column\n                    caption={\"Имя\"}\n                    dataField={\"userName\"}>\n                    <RequiredRule />\n                </Column>\n                <Column\n                    caption={\"Отчество\"}\n                    dataField={\"lastName\"}>\n                    <RequiredRule />\n                </Column>\n                <Column\n                    caption={\"Имя роли\"}\n                    dataField={\"role.name\"}>\n                    <RequiredRule />\n                </Column>\n                <Column\n                    caption={\"Удалена\"}\n                    dataType=\"boolean\"\n                    dataField={\"isDeleted\"}>\n                </Column>\n            </TreeList>\n        </Typography>\n    )\n}","import React from \"react\"\n\nexport const Method = () => {\n    return(\n        <div>\n            Методы!!!\n        </div>\n    )\n}","import React from \"react\"\n\nexport const Log = () => {\n    return(\n        <div>\n            Логи!!!\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Hidden } from '@material-ui/core';\nimport classnames from \"classnames\";\nimport { ItemListDrawer } from '../../components/itemDrawer/ItemListDrawer';\nimport { ItemDrawer } from '../../components/itemDrawer/ItemDrawer';\nimport { IDictionary } from '../../utils/interfaces';\nimport { Profile } from '../../components/profile/Profile';\nimport { Sales } from '../sales/Sales';\nimport { Route } from 'react-router-dom';\nimport { Role } from '../administration/role/Role';\nimport { Greeting } from '../greeting/Greeting';\nimport { Chart } from '../reports/chart/Chart';\nimport { Pharmacy } from '../directories/pharmacy/Pharmacy';\nimport { Preparations } from '../directories/preparation/Preparations';\nimport { ATH } from '../directories/ath/ATH';\nimport { Produced } from '../directories/produced.tsx/Produced';\nimport { Region } from '../directories/region/Region';\nimport { User } from '../administration/user/User';\nimport { Method } from '../administration/method/Method';\nimport { Log } from '../administration/log/Log';\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n    },\n    drawer: {\n      [theme.breakpoints.up('sm')]: {\n        width: drawerWidth,\n        flexShrink: 0,\n      },\n    },\n    appBar: {\n      [theme.breakpoints.up('sm')]: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n      },\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n      [theme.breakpoints.up('sm')]: {\n        display: 'none',\n      },\n    },\n    toolbar: theme.mixins.toolbar,\n    toolbarLogo: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    drawerPaper: {\n      width: drawerWidth,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    profile: {\n      marginLeft: 'auto',\n      display: 'flex',\n    },\n  }),\n);\ninterface ResponsiveDrawerProps {\n  container?: any;\n}\n\nexport const ResponsiveDrawer = (props: ResponsiveDrawerProps) => {\n  const { container } = props;\n  const classes = useStyles();\n  const [mobileOpen, setMobileOpen] = useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n\n  const directories: IDictionary<string>[] = [\n    { 'pharmacy': 'Аптеки' },\n    { 'preparations': 'Препараты' },\n    { 'code': 'Код АТН' },\n    { 'produced': 'Производители' },\n    { 'region': 'Регионы' }]\n  const administration: IDictionary<string>[] = [\n    { 'users': 'Пользователи' },\n    { 'roles': 'Роли' },\n    { 'methods': 'Методы' },\n    { 'logs': 'Логи' }]\n  const reports: IDictionary<string>[] = [{ 'charts': 'Графики' }]\n\n  const drawer = (\n    <div>\n      <div className={classnames(classes.toolbar, classes.toolbarLogo)}>ЛОГО</div>\n      <Divider />\n      <ItemDrawer\n        title={\"Главная\"}\n        link={\"main\"}\n      />\n      <ItemDrawer\n        title={\"Продажи\"}\n        link={\"sales\"}\n      />\n      <ItemListDrawer title={\"Отчеты\"} listItems={reports} />\n      <ItemListDrawer title={\"Справочники\"} listItems={directories} />\n      <ItemListDrawer title={\"Администрирование\"} listItems={administration} />\n    </div>\n  );\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={handleDrawerToggle}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Responsive drawer\n          </Typography>\n          <Typography className={classes.profile}>\n            <Profile />\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\n        <Hidden smUp implementation=\"css\">\n          <Drawer\n            container={container}\n            variant=\"temporary\"\n            anchor={'left'}\n            open={mobileOpen}\n            onClose={handleDrawerToggle}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            ModalProps={{\n              keepMounted: true,\n            }}\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n        <Hidden xsDown implementation=\"css\">\n          <Drawer\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            variant=\"permanent\"\n            open\n          >\n            {drawer}\n          </Drawer>\n        </Hidden>\n      </nav>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Typography paragraph>\n          <Route path={\"/farm-app/main/\"}>\n            <Greeting />\n          </Route>\n          <Route path={\"/farm-app/sales/\"}>\n            <Sales />\n          </Route>\n          <Route path={\"/farm-app/charts/\"}>\n            <Chart />\n          </Route>\n          <Route path={\"/farm-app/pharmacy/\"}>\n            <Pharmacy />\n          </Route>\n          <Route path={\"/farm-app/preparations/\"}>\n            <Preparations />\n          </Route>\n          <Route path={\"/farm-app/code/\"}>\n            <ATH />\n          </Route>\n          <Route path={\"/farm-app/produced/\"}>\n            <Produced />\n          </Route>\n          <Route path={\"/farm-app/region/\"}>\n            <Region />\n          </Route>\n          <Route path={\"/farm-app/users/\"}>\n            <User />\n          </Route>\n          <Route path={\"/farm-app/roles/\"}>\n            <Role />\n          </Route>\n          <Route path={\"/farm-app/methods/\"}>\n            <Method />\n          </Route>\n          <Route path={\"/farm-app/logs/\"}>\n            <Log />\n          </Route>\n        </Typography>\n      </main>\n    </div>\n  );\n}","import React from \"react\";\nimport \"./App.css\";\nimport { SignIn } from \"./modules/auth/SignIn\";\nimport { ResponsiveDrawer } from \"./modules/menu/ResponsiveDrawer\";\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\n\nconst NotFoundRedirect = () => <Redirect to='/farm-app/' />\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/farm-app/auth/\">\n          <SignIn />\n        </Route>\n        <Route path=\"/farm-app/\">\n          <ResponsiveDrawer />\n        </Route>\n         <Route component={NotFoundRedirect} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}