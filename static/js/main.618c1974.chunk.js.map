{"version":3,"sources":["resources/boy.svg","store/auth/AuthSelector.ts","store/auth/AuthActions.ts","settings.ts","modules/auth/SignIn.tsx","components/itemDrawer/ItemDrawerStyles.ts","components/itemDrawer/ItemListDrawer.tsx","components/itemDrawer/ItemDrawer.tsx","components/profile/Profile.tsx","api/mock/sales.ts","modules/sales/Sales.tsx","api/mock/roles.ts","modules/administration/role/Role.tsx","modules/greeting/Greeting.tsx","modules/reports/chart/Chart.tsx","api/mock/pharmacies.ts","modules/directories/pharmacy/Pharmacy.tsx","api/mock/preparations.ts","modules/directories/preparation/Preparations.tsx","api/mock/codeAthType.ts","modules/directories/ath/ATH.tsx","api/mock/vendors.ts","modules/directories/produced.tsx/Produced.tsx","api/mock/region.ts","modules/directories/region/Region.tsx","api/mock/users.ts","modules/administration/user/User.tsx","api/mock/apimethod.ts","modules/administration/method/Method.tsx","modules/administration/log/Log.tsx","api/mock/apimethodroles.ts","modules/administration/accessRoles/AccessRole.tsx","modules/menu/ResponsiveDrawer.tsx","App.tsx","serviceWorker.ts","store/auth/AuthState.ts","core/configureStore.ts","index.tsx","core/mainReducer.ts"],"names":["module","exports","authSelector","state","auth","create","actionCreatorFactory","createAsync","asyncFactory","changeTitle","login","params","dispatch","a","url","options","method","mode","cache","body","JSON","stringify","headers","fetch","res","console","log","ok","Error","status","statusText","json","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","height","authText","fontWeight","img","SignIn","classes","useDispatch","useSelector","useEffect","password","Container","component","maxWidth","CssBaseline","className","src","boy","alt","Typography","variant","noValidate","TextField","required","fullWidth","id","type","label","name","autoFocus","autoComplete","Button","color","onClick","useStylesDrawer","createStyles","root","backgroundColor","palette","background","nested","paddingLeft","LinkStyles","link","textDecoration","ItemListDrawer","title","listItems","links","useState","open","setOpen","location","useLocation","List","aria-labelledby","ListItem","button","ListItemText","primary","Collapse","in","timeout","unmountOnExit","map","item","index","key","disablePadding","to","Object","keys","selected","matchPath","pathname","values","ItemDrawer","card","justifyContent","Profile","anchorEl","setAnchorEl","Boolean","handleClose","IconButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","sales","amount","date","drug","ath","code","parentId","isDeleted","vendor","isDomestic","isGeneric","pharmacy","region","population","isMode","isNetwork","isType","price","quantity","isDiscount","Sales","dataSource","showRowLines","showBorders","columnAutoWidth","keyExpr","onCellPrepared","e","column","command","addLink","cellElement","querySelector","remove","visible","enabled","defaultPageSize","showPageSizeSelector","allowedPageSizes","showInfo","allowUpdating","allowDeleting","allowAdding","caption","dataField","alignment","dataType","allowHeaderFiltering","roles","Role","Greeting","Chart","pharmacies","Pharmacy","rootValue","autoExpandAll","parentIdExpr","preparations","Preparations","codeAthType","ATH","vendors","Produced","regions","expandedRowKeys","Region","defaultExpandedRowKeys","users","firstName","userName","lastName","role","User","apimethods","discription","pathUtl","httpMethod","isNotNullParam","isNeedAuntification","Method","Log","apimethodroles","apiMethod","AccessRole","drawer","breakpoints","up","flexShrink","appBar","marginLeft","menuButton","marginRight","toolbar","mixins","toolbarLogo","drawerPaper","content","flexGrow","padding","profile","ResponsiveDrawer","props","container","mobileOpen","setMobileOpen","handleDrawerToggle","classnames","Divider","AppBar","position","Toolbar","edge","noWrap","Hidden","smUp","implementation","Drawer","anchor","ModalProps","xsDown","paragraph","path","NotFoundRedirect","App","exact","window","hostname","match","authReducer","reducerWithInitialState","user","token","case","async","started","loadState","error","undefined","done","result","failed","persistConfig","createBrowserHistory","storage","whitelist","composeEnhancers","compose","history","basename","process","middleware","thunk","enhancer","applyMiddleware","persistedReducer","persistReducer","combineReducers","store","createStore","persistor","persistStore","configureStore","ReactDOM","render","StrictMode","loading","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.618c1974.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/boy.8547ceae.svg\";","import { IAppState } from \"../../core/mainReducer\";\r\n\r\nexport const authSelector = (state: IAppState) => state.auth;\r\n","import { asyncFactory } from \"typescript-fsa-redux-thunk\";\r\nimport actionCreatorFactory from \"typescript-fsa\";\r\nimport { BACK_URL } from \"../../settings\";\r\nimport { ILoginParams, ILoginResponse } from \"../../api/dto/Auth\";\r\n\r\nconst create = actionCreatorFactory(\"LOGIN\");\r\nconst createAsync = asyncFactory(create);\r\n\r\nexport const changeTitle = create<string>(\"Change the title\");\r\n\r\nexport const login = createAsync<ILoginParams, ILoginResponse, Error>(\r\n  \"LOGIN\",\r\n  async (params, dispatch) => {\r\n    const url = `${BACK_URL}/api/Users/authenticate`;\r\n    const options: RequestInit = {\r\n      method: \"POST\",\r\n      mode: \"no-cors\",\r\n      cache: \"no-cache\",\r\n      body: JSON.stringify(params),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Methods\": \"*\",\r\n        \"Access-Control-Allow-Headers\": \"*\",\r\n      },\r\n      // redirect: 'follow', // manual, *follow, error\r\n      // referrer: 'no-referrer', // no-referrer, *client\r\n    };\r\n    const res = await fetch(url, options);\r\n    console.log(res);\r\n    if (!res.ok) {\r\n      throw new Error(`Error ${res.status}: ${res.statusText}`);\r\n    }\r\n\r\n    dispatch(changeTitle(\"You are logged-in\"));\r\n\r\n    return res.json();\r\n  }\r\n);\r\n","export const BACK_URL = \"http://localhost:5000\";\r\n","import React, { useEffect, useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport boy from \"../../resources/boy.svg\"\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { authSelector } from '../../store/auth/AuthSelector';\r\nimport { login } from '../../store/auth/AuthActions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        height: 45\r\n    },\r\n    authText: {\r\n        marginTop: 20,\r\n        fontWeight: \"bold\"\r\n    },\r\n    img: {\r\n        width: 150,\r\n        height: 150,\r\n    }\r\n}));\r\n\r\nexport const SignIn = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const selector = useSelector(authSelector);\r\n    const handleClick = () => {\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(login({ login: \"1\", password: \"1\" }))\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <img className={classes.img} src={boy} alt=\"boy\" />\r\n                <Typography className={classes.authText} component=\"h1\" variant=\"h4\">\r\n                    Авторизация\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"text\"\r\n                        type=\"text\"\r\n                        label=\"Логин\"\r\n                        name=\"text\"\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Пароль\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={handleClick}\r\n                    >\r\n                        Войти\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\n","import { makeStyles, createStyles, Theme } from \"@material-ui/core\";\r\n\r\nexport const useStylesDrawer = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '100%',\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    nested: {\r\n      paddingLeft: theme.spacing(4),\r\n    },\r\n  }),\r\n);\r\n\r\nexport const LinkStyles = makeStyles((theme: Theme) =>\r\ncreateStyles({\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: 'rgba(0, 0, 0, 0.87)'\r\n  }\r\n}))","import React, { useState, FC } from \"react\"\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport { useStylesDrawer, LinkStyles } from \"./ItemDrawerStyles\";\r\nimport { Link, matchPath, useLocation } from \"react-router-dom\";\r\nimport { IDictionary } from \"../../utils/interfaces\";\r\n\r\ninterface IProps {\r\n  title: string;\r\n  listItems:  IDictionary<string>[] \r\n}\r\n\r\nexport const ItemListDrawer: FC<IProps> = ({ title, listItems }) => {\r\n  const classes = useStylesDrawer();\r\n  const links = LinkStyles();\r\n  const [open, setOpen] = useState(true);\r\n\r\n  const location = useLocation();\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n  return (\r\n    <List\r\n      component=\"nav\"\r\n      aria-labelledby=\"nested-list-subheader\"\r\n      className={classes.root}\r\n    >\r\n      <ListItem button onClick={handleClick}>\r\n        <ListItemText primary={title} />\r\n        {open ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItem>\r\n\r\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n        {listItems.map((item, index) => (\r\n          <List key={index} component=\"div\" disablePadding>\r\n            <Link className={links.link} to={`/farm-app/${Object.keys(item)[0]}`}>\r\n              <ListItem\r\n                button\r\n                className={classes.nested}\r\n                selected={!!matchPath(location.pathname, `/${Object.keys(item)[0]}`)}>\r\n                <ListItemText primary={Object.values(item)[0]} key={index} />\r\n              </ListItem>\r\n            </Link>\r\n          </List>\r\n        ))}\r\n      </Collapse>\r\n\r\n    </List>\r\n  )\r\n}","import React, { FC } from \"react\"\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { useStylesDrawer, LinkStyles } from \"./ItemDrawerStyles\";\r\nimport { Link, useLocation, matchPath } from \"react-router-dom\";\r\n\r\ninterface IProps {\r\n    title: string;\r\n    link: string;\r\n}\r\n\r\nexport const ItemDrawer: FC<IProps> = ({ title, link }) => {\r\n    const classes = useStylesDrawer();\r\n    const links = LinkStyles();\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <List\r\n            component=\"nav\"\r\n            aria-labelledby=\"nested-list-subheader\"\r\n            className={classes.root}\r\n        >\r\n            <Link className={links.link} to={`/farm-app/${link}`}>\r\n                <ListItem\r\n                    button\r\n                    selected={!!matchPath(location.pathname, `/${link}`)}>\r\n                    <ListItemText primary={title} />\r\n                </ListItem>\r\n            </Link>\r\n        </List>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport { Typography, makeStyles, Theme, createStyles, Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        card: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            margin: '10px',\r\n        },\r\n        img: {\r\n            justifyContent: 'center',\r\n        }\r\n    }))\r\n\r\nexport const Profile = () => {\r\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n            >\r\n                <Typography>Карточка пользователя</Typography>\r\n            </IconButton>\r\n            <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n\r\n            >\r\n                <div className={classes.card}>\r\n                    <MenuItem className={classes.img} onClick={handleClose}><AccountCircle /></MenuItem>\r\n                    <MenuItem onClick={handleClose}>Чолак Александр</MenuItem>\r\n                    <MenuItem onClick={handleClose}>Админ</MenuItem>\r\n                    <Button color=\"inherit\">Выйти</Button>\r\n                </div>\r\n            </Menu>\r\n        </div>\r\n    )\r\n}","import { ISales } from \"../dto/Sales\";\r\n\r\nexport const sales: ISales[] = [\r\n  {\r\n    id: 1,\r\n    amount: 200.48,\r\n    date: \"2020-03-19 13:33:33\",\r\n    drug: {\r\n      id: 1,\r\n      ath: {\r\n        id: 1,\r\n        code: \"FF0A\",\r\n        parentId: -1,\r\n        name: \"Стамотологические препараты\",\r\n        isDeleted: false,\r\n      },\r\n      name: \"Валерьяныч\",\r\n      vendor: {\r\n        id: 1,\r\n        name: \"ООО «Произв»\",\r\n        isDomestic: false,\r\n        isDeleted: false,\r\n      },\r\n      isDomestic: false,\r\n      isGeneric: false,\r\n      isDeleted: false,\r\n    },\r\n    pharmacy: {\r\n      id: 1,\r\n      parentId: -1,\r\n      region: {\r\n        id: 1,\r\n        parentId: -1,\r\n\r\n        name: \"Тирасполь\",\r\n        population: 200000,\r\n        isDeleted: false,\r\n      },\r\n      name: \"АПТЪЕКА\",\r\n      isDeleted: false,\r\n      isMode: false,\r\n      isNetwork: true,\r\n      isType: true,\r\n    },\r\n    price: 300.3,\r\n    quantity: 20,\r\n    isDeleted: false,\r\n    isDiscount: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    amount: 200.48,\r\n    date: \"2020-02-19 13:33:33\",\r\n    drug: {\r\n      id: 2,\r\n      ath: {\r\n        id: 2,\r\n        parentId: -1,\r\n        code: \"FF0A\",\r\n        name: \"Стамотологические препараты\",\r\n        isDeleted: false,\r\n      },\r\n      name: \"Валерьяныч1\",\r\n      vendor: {\r\n        id: 2,\r\n        name: \"ООО «Произв»\",\r\n        isDomestic: false,\r\n        isDeleted: false,\r\n      },\r\n      isDomestic: false,\r\n      isGeneric: false,\r\n      isDeleted: false,\r\n    },\r\n    pharmacy: {\r\n      id: 2,\r\n      parentId: -1,\r\n      region: {\r\n        id: 2,\r\n        parentId: -1,\r\n\r\n        name: \"Тирасполь\",\r\n        population: 200000,\r\n        isDeleted: false,\r\n      },\r\n      name: \"АПТЪЕКА1\",\r\n      isDeleted: false,\r\n      isMode: false,\r\n      isNetwork: true,\r\n      isType: true,\r\n    },\r\n    price: 300.3,\r\n    quantity: 20,\r\n    isDeleted: false,\r\n    isDiscount: true,\r\n  },\r\n  {\r\n    id: 3,\r\n    amount: 200.48,\r\n    date: \"2020-01-19 13:33:33\",\r\n    drug: {\r\n      id: 3,\r\n      ath: {\r\n        id: 3,\r\n        parentId: -1,\r\n        code: \"FF0A\",\r\n        name: \"Стамотологические препараты\",\r\n        isDeleted: false,\r\n      },\r\n      name: \"Валерьяныч2\",\r\n      vendor: {\r\n        id: 3,\r\n        name: \"ООО «Произв»\",\r\n        isDomestic: false,\r\n        isDeleted: false,\r\n      },\r\n      isDomestic: false,\r\n      isGeneric: false,\r\n      isDeleted: false,\r\n    },\r\n    pharmacy: {\r\n      id: 3,\r\n      parentId: -1,\r\n      region: {\r\n        id: 3,\r\n        parentId: -1,\r\n\r\n        name: \"Тирасполь\",\r\n        population: 200000,\r\n        isDeleted: false,\r\n      },\r\n      name: \"АПТЪЕКА1\",\r\n      isDeleted: false,\r\n      isMode: false,\r\n      isNetwork: true,\r\n      isType: true,\r\n    },\r\n    price: 300.3,\r\n    quantity: 20,\r\n    isDeleted: false,\r\n    isDiscount: true,\r\n  },\r\n  {\r\n    id: 4,\r\n    amount: 200.48,\r\n    date: \"2020-04-19 13:33:33\",\r\n    drug: {\r\n      id: 4,\r\n      ath: {\r\n        id: 4,\r\n        parentId: -1,\r\n        code: \"FF0A\",\r\n        name: \"Стамотологические препараты\",\r\n        isDeleted: false,\r\n      },\r\n      name: \"Валерьяныч3\",\r\n      vendor: {\r\n        id: 4,\r\n        name: \"ООО «Произв»\",\r\n        isDomestic: false,\r\n        isDeleted: false,\r\n      },\r\n      isDomestic: false,\r\n      isGeneric: false,\r\n      isDeleted: false,\r\n    },\r\n    pharmacy: {\r\n      id: 4,\r\n      parentId: -1,\r\n      region: {\r\n        id: 4,\r\n        parentId: -1,\r\n\r\n        name: \"Тирасполь\",\r\n        population: 200000,\r\n        isDeleted: false,\r\n      },\r\n      name: \"АПТЪЕКА\",\r\n      isDeleted: false,\r\n      isMode: false,\r\n      isNetwork: true,\r\n      isType: true,\r\n    },\r\n    price: 301.3,\r\n    quantity: 20,\r\n    isDeleted: false,\r\n    isDiscount: true,\r\n  },\r\n  {\r\n    id: 5,\r\n    amount: 200.48,\r\n    date: \"2020-04-19 13:33:33\",\r\n    drug: {\r\n      id: 5,\r\n      ath: {\r\n        id: 5,\r\n        parentId: -1,\r\n        code: \"FF0A\",\r\n        name: \"Стамотологические препараты\",\r\n        isDeleted: false,\r\n      },\r\n      name: \"Валерьяныч4\",\r\n      vendor: {\r\n        id: 5,\r\n        name: \"ООО «Произв»\",\r\n        isDomestic: false,\r\n        isDeleted: false,\r\n      },\r\n      isDomestic: false,\r\n      isGeneric: false,\r\n      isDeleted: false,\r\n    },\r\n    pharmacy: {\r\n      id: 5,\r\n      parentId: -1,\r\n      region: {\r\n        id: 5,\r\n        parentId: -1,\r\n\r\n        name: \"Тирасполь\",\r\n        population: 200000,\r\n        isDeleted: false,\r\n      },\r\n      name: \"АПТЪЕКА\",\r\n      isDeleted: false,\r\n      isMode: false,\r\n      isNetwork: true,\r\n      isType: true,\r\n    },\r\n    price: 300.3,\r\n    quantity: 20,\r\n    isDeleted: false,\r\n    isDiscount: true,\r\n  },\r\n  {\r\n    id: 6,\r\n    amount: 200.48,\r\n    date: \"2020-04-19 13:33:33\",\r\n    drug: {\r\n      id: 6,\r\n      ath: {\r\n        id: 6,\r\n        parentId: -1,\r\n        code: \"FF0A\",\r\n        name: \"Стамотологические препараты\",\r\n        isDeleted: false,\r\n      },\r\n      name: \"Валерьяныч4\",\r\n      vendor: {\r\n        id: 6,\r\n        name: \"ООО «Произв»\",\r\n        isDomestic: false,\r\n        isDeleted: false,\r\n      },\r\n      isDomestic: false,\r\n      isGeneric: false,\r\n      isDeleted: false,\r\n    },\r\n    pharmacy: {\r\n      id: 6,\r\n      parentId: -1,\r\n      region: {\r\n        id: 6,\r\n        parentId: -1,\r\n\r\n        name: \"Тирасполь\",\r\n        population: 200000,\r\n        isDeleted: false,\r\n      },\r\n      name: \"АПТЪЕКА\",\r\n      isDeleted: false,\r\n      isMode: false,\r\n      isNetwork: true,\r\n      isType: true,\r\n    },\r\n    price: 300.3,\r\n    quantity: 20,\r\n    isDeleted: false,\r\n    isDiscount: true,\r\n  },\r\n];\r\n","import React from \"react\"\r\nimport { Typography } from \"@material-ui/core\"\r\nimport TreeList, { Editing, SearchPanel, Column, RequiredRule, Selection, Sorting, Scrolling, Paging, Pager, HeaderFilter } from \"devextreme-react/tree-list\"\r\nimport { sales } from \"../../api/mock/sales\"\r\n\r\nexport const Sales = () => {\r\n    const allowedPageSizes = [5, 10, 20];\r\n    const onCellPrepared = (e: any) => {\r\n        if (e.column.command === 'edit') {\r\n            let addLink = e.cellElement.querySelector('.dx-link-add');\r\n\r\n            if (addLink) {\r\n                addLink.remove();\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Typography>\r\n            <TreeList\r\n                id=\"sales\"\r\n                dataSource={sales}\r\n                showRowLines={true}\r\n                showBorders={true}\r\n                columnAutoWidth={true}\r\n                keyExpr=\"id\"\r\n                onCellPrepared={onCellPrepared}\r\n            >\r\n                <HeaderFilter visible={true} />\r\n                <Scrolling mode=\"standard\" />\r\n                <Paging\r\n                    enabled={true}\r\n                    defaultPageSize={5} />\r\n                <Pager\r\n                    showPageSizeSelector={true}\r\n                    allowedPageSizes={allowedPageSizes}\r\n                    showInfo={true} />\r\n                <Sorting mode=\"multiple\" />\r\n                <Selection mode=\"single\" />\r\n                <SearchPanel visible={true} />\r\n                <Editing\r\n                    allowUpdating={true}\r\n                    allowDeleting={true}\r\n                    allowAdding={true}\r\n                    mode=\"row\"\r\n                />\r\n                <Column\r\n                    caption={\"Номер\"}\r\n                    visible={false}\r\n                    dataField={\"id\"}>\r\n                </Column>\r\n                <Column\r\n                    caption={\"Название препарата\"}\r\n                    dataField={\"drug.name\"}>\r\n                    <RequiredRule />\r\n                </Column>\r\n                <Column\r\n                    caption={\"Название аптеки\"}\r\n                    dataField={\"pharmacy.name\"}>\r\n                    <RequiredRule />\r\n                </Column>\r\n                <Column\r\n                    alignment=\"right\"\r\n                    dataType=\"date\"\r\n                    allowHeaderFiltering={false}\r\n                    caption={\"Дата продажи\"}\r\n                    dataField={\"date\"}>\r\n                    <RequiredRule />\r\n                </Column>\r\n                <Column\r\n                    allowHeaderFiltering={false}\r\n                    caption={\"Цена за ед.\"}\r\n                    dataField={\"price\"}>\r\n                    <RequiredRule />\r\n                </Column>\r\n                <Column\r\n                    allowHeaderFiltering={false}\r\n                    caption={\"Кол-во\"}\r\n                    dataField={\"quantity\"}>\r\n                    <RequiredRule />\r\n                </Column>\r\n                <Column\r\n                    allowHeaderFiltering={false}\r\n                    caption={\"Сумма\"}\r\n                    dataField={\"amount\"}>\r\n                    <RequiredRule />\r\n                </Column>\r\n                <Column\r\n                    allowHeaderFiltering={false}\r\n                    caption={\"Дисконт\"}\r\n                    dataType=\"boolean\"\r\n                    dataField={\"isDiscount\"}>\r\n                </Column>\r\n                <Column\r\n                    allowHeaderFiltering={false}\r\n                    caption={\"Удалена\"}\r\n                    dataType=\"boolean\"\r\n                    dataField={\"isDeleted\"}>\r\n                </Column>\r\n            </TreeList>\r\n        </Typography>\r\n    )\r\n}\r\n","import { IRole } from \"../dto/Role\";\r\n\r\nexport const roles: IRole[] = [\r\n  {\r\n    id: 1,\r\n    name: \"Админ\",\r\n    isDeleted: false,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Юзер\",\r\n    isDeleted: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Аноним\",\r\n    isDeleted: true,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Модератор\",\r\n    isDeleted: false,\r\n  },\r\n];\r\n","import React from \"react\"\r\nimport { Typography } from \"@material-ui/core\"\r\nimport TreeList, { Editing, SearchPanel, Column, RequiredRule, Selection, Sorting } from \"devextreme-react/tree-list\"\r\nimport { roles } from \"../../../api/mock/roles\"\r\n\r\nexport const Role = () => {\r\n    return (\r\n        <Typography>\r\n            <TreeList\r\n                id=\"roles\"\r\n                dataSource={roles}\r\n                showRowLines={true}\r\n                showBorders={true}\r\n                columnAutoWidth={true}\r\n                keyExpr=\"id\"\r\n            >\r\n                <Sorting mode=\"multiple\" />\r\n                <Selection mode=\"single\" />\r\n                <SearchPanel visible={true} />\r\n                <Editing\r\n                    allowUpdating={true}\r\n                    allowDeleting={true}\r\n                    mode=\"row\"\r\n                />\r\n                <Column\r\n                    caption={\"Номер\"}\r\n                    dataType={\"number\"}\r\n                    visible={false}\r\n                    dataField={\"id\"}>\r\n                    <RequiredRule />\r\n                </Column>\r\n                <Column\r\n                    caption={\"Имя роли\"}\r\n                    dataType={\"string\"}\r\n                    dataField={\"name\"}>\r\n                    <RequiredRule />\r\n                </Column>\r\n                <Column\r\n                    caption={\"Удалена\"}\r\n                    dataType=\"boolean\"\r\n                    dataField={\"isDeleted\"}>\r\n                </Column>\r\n            </TreeList>\r\n        </Typography>\r\n    )\r\n}","import React from \"react\"\r\nimport { Typography } from \"@material-ui/core\"\r\n\r\nexport const Greeting = () => {\r\n    return(\r\n        <Typography>\r\n            Тут будет приветствие\r\n        </Typography>\r\n    )\r\n}","import React from \"react\"\r\n\r\nexport const Chart = () => {\r\n    return(\r\n        <div>\r\n            Графики!!!\r\n        </div>\r\n    )\r\n}","import { IPharmacy } from \"../dto/Pharmacy\";\r\n\r\nexport const pharmacies: IPharmacy[] = [\r\n  {\r\n    id: 1,\r\n    parentId: -1,\r\n    region: {\r\n      id: 1,\r\n      parentId: -1,\r\n\r\n      name: \"Тирасполь\",\r\n      population: 200000,\r\n      isDeleted: false,\r\n    },\r\n    name: \"АПТЪЕКА\",\r\n    isDeleted: false,\r\n    isMode: false,\r\n    isNetwork: true,\r\n    isType: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    parentId: 1,\r\n    region: {\r\n      id: 2,\r\n      parentId: -1,\r\n\r\n      name: \"Тирасполь\",\r\n      population: 200000,\r\n      isDeleted: false,\r\n    },\r\n    name: \"АПТЪЕКА11\",\r\n    isDeleted: false,\r\n    isMode: false,\r\n    isNetwork: true,\r\n    isType: true,\r\n  },\r\n  {\r\n    id: 3,\r\n    parentId: 1,\r\n    region: {\r\n      id: 3,\r\n      parentId: -1,\r\n\r\n      name: \"Тирасполь\",\r\n      population: 200000,\r\n      isDeleted: false,\r\n    },\r\n    name: \"АПТЪЕКА222\",\r\n    isDeleted: false,\r\n    isMode: false,\r\n    isNetwork: true,\r\n    isType: true,\r\n  },\r\n  {\r\n    id: 4,\r\n    parentId: 3,\r\n    region: {\r\n      id: 4,\r\n      parentId: -1,\r\n\r\n      name: \"Бендеры\",\r\n      population: 200000,\r\n      isDeleted: false,\r\n    },\r\n    name: \"АПТЪЕКА333\",\r\n    isDeleted: false,\r\n    isMode: false,\r\n    isNetwork: true,\r\n    isType: true,\r\n  },\r\n  {\r\n    id: 5,\r\n    parentId: 3,\r\n    region: {\r\n      id: 5,\r\n      parentId: -1,\r\n\r\n      name: \"Тирасполь\",\r\n      population: 200000,\r\n      isDeleted: false,\r\n    },\r\n    name: \"АПТЪЕКА444\",\r\n    isDeleted: false,\r\n    isMode: false,\r\n    isNetwork: true,\r\n    isType: true,\r\n  },\r\n  {\r\n    id: 6,\r\n    parentId: 5,\r\n    region: {\r\n      id: 6,\r\n      parentId: -1,\r\n\r\n      name: \"Тирасполь\",\r\n      population: 200000,\r\n      isDeleted: false,\r\n    },\r\n    name: \"АПТЪЕКА555\",\r\n    isDeleted: false,\r\n    isMode: false,\r\n    isNetwork: true,\r\n    isType: true,\r\n  },\r\n];\r\n","import React from \"react\"\r\nimport { Typography } from \"@material-ui/core\"\r\nimport TreeList, { Editing, SearchPanel, Column, RequiredRule, Selection, Sorting, FilterRow, Pager, Paging, Scrolling } from \"devextreme-react/tree-list\"\r\nimport { pharmacies } from \"../../../api/mock/pharmacies\"\r\n\r\nexport const Pharmacy = () => {\r\n    const allowedPageSizes = [5, 10, 20];\r\n\r\n    return (\r\n        <Typography>\r\n            <TreeList\r\n                id=\"pharmacies\"\r\n                dataSource={pharmacies}\r\n                showRowLines={true}\r\n                showBorders={true}\r\n                columnAutoWidth={true}\r\n                keyExpr=\"id\"\r\n                rootValue={1}\r\n                autoExpandAll={true}\r\n                parentIdExpr=\"parentId\"\r\n            >\r\n                <Scrolling mode=\"standard\" />\r\n                <Paging\r\n                    enabled={true}\r\n                    defaultPageSize={5} />\r\n                <Pager\r\n                    showPageSizeSelector={true}\r\n                    allowedPageSizes={allowedPageSizes}\r\n                    showInfo={true} />\r\n                <FilterRow visible={true} />\r\n                <Sorting mode=\"multiple\" />\r\n                <Selection mode=\"single\" />\r\n                <SearchPanel visible={true} />\r\n                <Editing\r\n                    allowUpdating={true}\r\n                    allowDeleting={true}\r\n                    allowAdding={true}\r\n                    mode=\"row\"\r\n                />\r\n                <Column\r\n                    caption={\"Номер\"}\r\n                    dataType={\"number\"}\r\n                    visible={false}\r\n                    dataField={\"id\"}>\r\n                </Column>\r\n                <Column\r\n                    caption={\"Название аптеки\"}\r\n                    dataType={\"string\"}\r\n                    dataField={\"name\"}>\r\n                    <RequiredRule />\r\n                </Column>\r\n                <Column\r\n                    caption={\"Имя региона\"}\r\n                    dataType={\"string\"}\r\n                    dataField={\"region.name\"}>\r\n                    <RequiredRule />\r\n                </Column>\r\n                <Column\r\n                    caption={\"Круглосуточная\"}\r\n                    dataType=\"boolean\"\r\n                    dataField={\"isMode\"}>\r\n                </Column>\r\n                <Column\r\n                    caption={\"Социальная\"}\r\n                    dataType=\"boolean\"\r\n                    dataField={\"isType\"}>\r\n                </Column>\r\n                <Column\r\n                    caption={\"Сеть аптек\"}\r\n                    dataType=\"boolean\"\r\n                    dataField={\"isNetwork\"}>\r\n                </Column>\r\n                <Column\r\n                    caption={\"Удалена\"}\r\n                    dataType=\"boolean\"\r\n                    dataField={\"isDeleted\"}>\r\n                </Column>\r\n            </TreeList>\r\n        </Typography>\r\n    )\r\n}","import { IDrug } from \"../dto/Drug\";\r\n\r\nexport const preparations: IDrug[] = [\r\n  {\r\n    id: 1,\r\n    name: \"Валерьяныч\",\r\n    isDeleted: false,\r\n    isDomestic: true,\r\n    isGeneric: false,\r\n    ath: {\r\n      id: 1,\r\n      parentId: -1,\r\n      name: \"Стамотологические препараты\",\r\n      code: \"A01\",\r\n      isDeleted: false,\r\n    },\r\n    vendor: {\r\n      id: 1,\r\n      name: \"ООО «Произв1»\",\r\n      isDeleted: false,\r\n      isDomestic: true,\r\n    },\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Валерьяныч\",\r\n    isDeleted: false,\r\n    isDomestic: true,\r\n    isGeneric: false,\r\n    ath: {\r\n      id: 2,\r\n      parentId: -1,\r\n      name: \"Стамотологические препараты\",\r\n      code: \"A01\",\r\n      isDeleted: false,\r\n    },\r\n    vendor: {\r\n      id: 2,\r\n      name: \"ООО «Произв»\",\r\n      isDeleted: false,\r\n      isDomestic: true,\r\n    },\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Валерьяныч\",\r\n    isDeleted: false,\r\n    isDomestic: true,\r\n    isGeneric: false,\r\n    ath: {\r\n      id: 1,\r\n      parentId: -1,\r\n      name: \"Стамотологические препараты\",\r\n      code: \"A01\",\r\n      isDeleted: false,\r\n    },\r\n    vendor: {\r\n      id: 1,\r\n      name: \"ООО «Произв»\",\r\n      isDeleted: false,\r\n      isDomestic: true,\r\n    },\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Валерьяныч\",\r\n    isDeleted: false,\r\n    isDomestic: true,\r\n    isGeneric: false,\r\n    ath: {\r\n      id: 1,\r\n      parentId: -1,\r\n      name: \"Стамотологические препараты\",\r\n      code: \"A01\",\r\n      isDeleted: false,\r\n    },\r\n    vendor: {\r\n      id: 5,\r\n      name: \"ООО «Произв»\",\r\n      isDeleted: false,\r\n      isDomestic: true,\r\n    },\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Валерьяныч\",\r\n    isDeleted: false,\r\n    isDomestic: true,\r\n    isGeneric: false,\r\n    ath: {\r\n      id: 1,\r\n      parentId: -1,\r\n      name: \"Стамотологические препараты\",\r\n      code: \"A01\",\r\n      isDeleted: false,\r\n    },\r\n    vendor: {\r\n      id: 1,\r\n      name: \"ООО «Произв»\",\r\n      isDeleted: false,\r\n      isDomestic: true,\r\n    },\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Валерьяныч\",\r\n    isDeleted: false,\r\n    isDomestic: true,\r\n    isGeneric: false,\r\n    ath: {\r\n      id: 5,\r\n      parentId: -1,\r\n      name: \"Стамотологические препараты\",\r\n      code: \"A01\",\r\n      isDeleted: false,\r\n    },\r\n    vendor: {\r\n      id: 5,\r\n      name: \"ООО «Произв»\",\r\n      isDeleted: false,\r\n      isDomestic: true,\r\n    },\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Валерьяныч\",\r\n    isDeleted: false,\r\n    isDomestic: true,\r\n    isGeneric: false,\r\n    ath: {\r\n      id: 1,\r\n      parentId: -1,\r\n      name: \"Стамотологические препараты\",\r\n      code: \"A01\",\r\n      isDeleted: false,\r\n    },\r\n    vendor: {\r\n      id: 2,\r\n      name: \"ООО «Произв»\",\r\n      isDeleted: false,\r\n      isDomestic: true,\r\n    },\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"Валерьяныч\",\r\n    isDeleted: false,\r\n    isDomestic: true,\r\n    isGeneric: false,\r\n    ath: {\r\n      id: 3,\r\n      parentId: -1,\r\n      name: \"Стамотологические препараты\",\r\n      code: \"A01\",\r\n      isDeleted: false,\r\n    },\r\n    vendor: {\r\n      id: 1,\r\n      name: \"ООО «Произв»\",\r\n      isDeleted: false,\r\n      isDomestic: true,\r\n    },\r\n  },\r\n];\r\n","import React from \"react\"\r\nimport { Typography } from \"@material-ui/core\"\r\nimport TreeList, { Editing, SearchPanel, Column, RequiredRule, Selection, Sorting, Scrolling, Paging, Pager, FilterRow } from \"devextreme-react/tree-list\"\r\nimport { preparations } from \"../../../api/mock/preparations\"\r\n\r\nexport const Preparations = () => {\r\n    const allowedPageSizes = [5, 10, 20];\r\n    const onCellPrepared = (e: any) => {\r\n        if (e.column.command === 'edit') {\r\n            let addLink = e.cellElement.querySelector('.dx-link-add');\r\n\r\n            if (addLink) {\r\n                addLink.remove();\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <Typography>\r\n            <TreeList\r\n                id=\"preparations\"\r\n                dataSource={preparations}\r\n                showRowLines={true}\r\n                showBorders={true}\r\n                columnAutoWidth={true}\r\n                keyExpr=\"id\"\r\n                onCellPrepared={onCellPrepared}\r\n            >\r\n                <Scrolling mode=\"standard\" />\r\n                <Paging\r\n                    enabled={true}\r\n                    defaultPageSize={5} />\r\n                <Pager\r\n                    showPageSizeSelector={true}\r\n                    allowedPageSizes={allowedPageSizes}\r\n                    showInfo={true} />\r\n                <FilterRow visible={true} />\r\n                <Sorting mode=\"multiple\" />\r\n                <Selection mode=\"single\" />\r\n                <SearchPanel visible={true} />\r\n                <Editing\r\n                    allowUpdating={true}\r\n                    allowDeleting={true}\r\n                    allowAdding={true}\r\n                    mode=\"row\"\r\n                />\r\n                <Column\r\n                    caption={\"Номер\"}\r\n                    visible={false}\r\n                    dataField={\"id\"}>\r\n                </Column>\r\n                <Column\r\n                    caption={\"Имя группы Атх\"}\r\n                    dataField={\"ath.name\"}>\r\n                    <RequiredRule />\r\n                </Column>\r\n\r\n                <Column\r\n                    caption={\"Код группы Атх\"}\r\n                    dataField={\"ath.code\"}>\r\n                    <RequiredRule />\r\n                </Column>\r\n                <Column\r\n                    caption={\"Имя производителя\"}\r\n                    dataField={\"vendor.name\"}>\r\n                    <RequiredRule />\r\n                </Column>\r\n                <Column\r\n                    caption={\"Отечесвтенный\"}\r\n                    dataField={\"isDomestic\"}>\r\n                    <RequiredRule />\r\n                </Column>\r\n                <Column\r\n                    caption={\"Generic\"}\r\n                    dataField={\"isGeneric\"}>\r\n                    <RequiredRule />\r\n                </Column>\r\n                <Column\r\n                    caption={\"Удалена\"}\r\n                    dataType=\"boolean\"\r\n                    dataField={\"isDeleted\"}>\r\n                </Column>\r\n            </TreeList>\r\n        </Typography>\r\n    )\r\n}","import { ICodeAuthTypes } from \"../dto/CodeAthType\";\r\n\r\nexport const codeAthType: ICodeAuthTypes[] = [\r\n    {\r\n        id: 1,\r\n        parentId: -1,\r\n        name: \"Стамотологические препараты\",\r\n        code: \"A\",\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 2,\r\n        parentId: 1,\r\n        name: \"Стамотологические препараты\",\r\n        code: \"A\",\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 3,\r\n        parentId: -1,\r\n        name: \"Стамотологические препараты\",\r\n        code: \"A\",\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 4,\r\n        parentId: 1,\r\n        name: \"Стамотологические препараты\",\r\n        code: \"A\",\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 5,\r\n        parentId: 2,\r\n        name: \"Стамотологические препараты\",\r\n        code: \"A\",\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 6,\r\n        parentId: 2,\r\n        name: \"Стамотологические препараты\",\r\n        code: \"A\",\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 7,\r\n        parentId: 3,\r\n        name: \"Стамотологические препараты\",\r\n        code: \"A\",\r\n        isDeleted: false\r\n    },\r\n]","import React from \"react\"\r\nimport { Typography } from \"@material-ui/core\"\r\nimport TreeList, { Editing, SearchPanel, Column, RequiredRule, Selection, Sorting, FilterRow, Pager, Paging, Scrolling } from \"devextreme-react/tree-list\"\r\nimport { codeAthType } from \"../../../api/mock/codeAthType\"\r\n\r\nconst allowedPageSizes = [5, 10, 20];\r\n\r\nexport const ATH = () => {\r\n    return (\r\n        <Typography>\r\n            <TreeList\r\n                id=\"codeAthType\"\r\n                dataSource={codeAthType}\r\n                showRowLines={true}\r\n                showBorders={true}\r\n                columnAutoWidth={true}\r\n                keyExpr=\"id\"\r\n                rootValue={1}\r\n                autoExpandAll={true}\r\n                parentIdExpr=\"parentId\"\r\n            >\r\n                <Scrolling mode=\"standard\" />\r\n                <Paging\r\n                    enabled={true}\r\n                    defaultPageSize={5} />\r\n                <Pager\r\n                    showPageSizeSelector={true}\r\n                    allowedPageSizes={allowedPageSizes}\r\n                    showInfo={true} />\r\n                <FilterRow visible={true} />\r\n                <Sorting mode=\"multiple\" />\r\n                <Selection mode=\"single\" />\r\n                <SearchPanel visible={true} />\r\n                <Editing\r\n                    allowUpdating={true}\r\n                    allowDeleting={true}\r\n                    allowAdding={true}\r\n                    mode=\"row\"\r\n                />\r\n                <Column\r\n                    caption={\"Номер\"}\r\n                    dataType={\"number\"}\r\n                    visible={false}\r\n                    dataField={\"id\"}>\r\n                </Column>\r\n                <Column\r\n                    caption={\"Название группы\"}\r\n                    dataType={\"string\"}\r\n                    dataField={\"name\"}>\r\n                    <RequiredRule />\r\n                </Column>\r\n                <Column\r\n                    caption={\"Код группы\"}\r\n                    dataType={\"string\"}\r\n                    dataField={\"code\"}>\r\n                    <RequiredRule />\r\n                </Column>\r\n                <Column\r\n                    caption={\"Удалена\"}\r\n                    dataType=\"boolean\"\r\n                    dataField={\"isDeleted\"}>\r\n                </Column>\r\n            </TreeList>\r\n        </Typography>\r\n    )\r\n}","import { IVendor } from \"../dto/Vendor\";\r\n\r\nexport const vendors: IVendor[] = [\r\n  {\r\n    id: 1,\r\n    name: \"ООО «Произв»\",\r\n    isDomestic: true,\r\n    isDeleted: false,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"ООО «Произв1»\",\r\n    isDomestic: true,\r\n    isDeleted: false,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"ООО «Произв»\",\r\n    isDomestic: true,\r\n    isDeleted: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"ООО «Произв1»\",\r\n    isDomestic: true,\r\n    isDeleted: true,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"ООО «Произв»\",\r\n    isDomestic: true,\r\n    isDeleted: true,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"ООО «Произв2»\",\r\n    isDomestic: false,\r\n    isDeleted: false,\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"ООО «Произв2»\",\r\n    isDomestic: false,\r\n    isDeleted: true,\r\n  },\r\n  {\r\n    id: 7,\r\n    name: \"ООО «Произв»\",\r\n    isDomestic: true,\r\n    isDeleted: false,\r\n  },\r\n  {\r\n    id: 8,\r\n    name: \"ООО «Произв»\",\r\n    isDomestic: true,\r\n    isDeleted: false,\r\n  },\r\n  {\r\n    id: 9,\r\n    name: \"ООО «Произв»\",\r\n    isDomestic: true,\r\n    isDeleted: false,\r\n  },\r\n];\r\n","import React from \"react\"\r\nimport { Typography } from \"@material-ui/core\"\r\nimport TreeList, { Editing, SearchPanel, Column, RequiredRule, Selection, Sorting, Scrolling, Paging, Pager } from \"devextreme-react/tree-list\"\r\nimport { vendors } from \"../../../api/mock/vendors\"\r\n\r\nexport const Produced = () => {\r\n    const allowedPageSizes = [5, 10, 20];\r\n    const onCellPrepared = (e: any) => {\r\n        if (e.column.command === 'edit') {\r\n            let addLink = e.cellElement.querySelector('.dx-link-add');\r\n\r\n            if (addLink) {\r\n                addLink.remove();\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <Typography>\r\n            <TreeList\r\n                id=\"vendors\"\r\n                dataSource={vendors}\r\n                showRowLines={true}\r\n                showBorders={true}\r\n                columnAutoWidth={true}\r\n                keyExpr=\"id\"\r\n                onCellPrepared={onCellPrepared}\r\n            >\r\n                <Scrolling mode=\"standard\" />\r\n                <Paging\r\n                    enabled={true}\r\n                    defaultPageSize={5} />\r\n                <Pager\r\n                    showPageSizeSelector={true}\r\n                    allowedPageSizes={allowedPageSizes}\r\n                    showInfo={true} />\r\n                <Sorting mode=\"multiple\" />\r\n                <Selection mode=\"single\" />\r\n                <SearchPanel visible={true} />\r\n                <Editing\r\n                    allowUpdating={true}\r\n                    allowDeleting={true}\r\n                    allowAdding={true}\r\n                    mode=\"row\"\r\n                />\r\n                <Column\r\n                    caption={\"Номер\"}\r\n                    visible={false}\r\n                    dataField={\"id\"}>\r\n                </Column>\r\n                <Column\r\n                    caption={\"Имя производителя\"}\r\n                    dataField={\"name\"}>\r\n                    <RequiredRule />\r\n                </Column>\r\n                <Column\r\n                    caption={\"Отечесвтенный\"}\r\n                    dataField={\"isDomestic\"}>\r\n                    <RequiredRule />\r\n                </Column>\r\n                <Column\r\n                    caption={\"Удалена\"}\r\n                    dataType=\"boolean\"\r\n                    dataField={\"isDeleted\"}>\r\n                </Column>\r\n            </TreeList>\r\n        </Typography>\r\n    )\r\n}","import { IRegion } from \"../dto/Region\";\r\n\r\nexport const regions: IRegion[] = [\r\n    {\r\n        id: 1,\r\n        parentId: -1,\r\n        name: \"ПМР\",\r\n        population: 47487489,\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 2,\r\n        parentId: 1,\r\n        name: \"Бендеры\",\r\n        population: 30000,\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 3,\r\n        parentId: 1,\r\n        name: \"Тирасполь\",\r\n        population: 30000,\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 4,\r\n        parentId: 1,\r\n        name: \"Слободзея\",\r\n        population: 30000,\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 5,\r\n        parentId: 4,\r\n        name: \"Глиное\",\r\n        population: 30000,\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 6,\r\n        parentId: 4,\r\n        name: \"Красное\",\r\n        population: 30000,\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 7,\r\n        parentId: 4,\r\n        name: \"Коротное\",\r\n        population: 30000,\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 8,\r\n        parentId: -1,\r\n        name: \"РФ\",\r\n        population: 30000,\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 9,\r\n        parentId: 8,\r\n        name: \"Москва\",\r\n        population: 30000,\r\n        isDeleted: false\r\n    },\r\n    {\r\n        id: 10,\r\n        parentId: 8,\r\n        name: \"Рязань\",\r\n        population: 30000,\r\n        isDeleted: false\r\n    },\r\n]","import React from \"react\"\r\nimport { Typography } from \"@material-ui/core\"\r\nimport TreeList, { Editing, SearchPanel, Column, RequiredRule, Selection, Sorting, FilterRow, Pager, Paging, Scrolling } from \"devextreme-react/tree-list\"\r\nimport { regions } from \"../../../api/mock/region\"\r\n\r\nconst allowedPageSizes = [5, 10, 20];\r\nconst expandedRowKeys = [1];\r\n\r\nexport const Region = () => {\r\n    return (\r\n        <Typography>\r\n            <TreeList\r\n                id=\"regions\"\r\n                dataSource={regions}\r\n                rootValue={-1}\r\n                defaultExpandedRowKeys={expandedRowKeys}\r\n                showRowLines={true}\r\n                showBorders={true}\r\n                columnAutoWidth={true}\r\n                parentIdExpr=\"parentId\"\r\n            >\r\n                <Scrolling mode=\"standard\" />\r\n                <Paging\r\n                    enabled={true}\r\n                    defaultPageSize={5} />\r\n                <Pager\r\n                    showPageSizeSelector={true}\r\n                    allowedPageSizes={allowedPageSizes}\r\n                    showInfo={true} />\r\n                <FilterRow visible={true} />\r\n                <Sorting mode=\"multiple\" />\r\n                <Selection mode=\"single\" />\r\n                <SearchPanel visible={true} />\r\n                <Editing\r\n                    allowUpdating={true}\r\n                    allowDeleting={true}\r\n                    allowAdding={true}\r\n                    mode=\"row\"\r\n                />\r\n                <Column\r\n                    caption={\"Номер\"}\r\n                    dataType={\"number\"}\r\n                    visible={false}\r\n                    dataField={\"id\"}>\r\n                </Column>\r\n                <Column\r\n                    caption={\"Название региона\"}\r\n                    dataType={\"string\"}\r\n                    dataField={\"name\"}>\r\n                    <RequiredRule />\r\n                </Column>\r\n                <Column\r\n                    caption={\"Численность населения\"}\r\n                    dataType={\"number\"}\r\n                    dataField={\"population\"}>\r\n                    <RequiredRule />\r\n                </Column>\r\n                <Column\r\n                    caption={\"Удалена\"}\r\n                    dataType=\"boolean\"\r\n                    dataField={\"isDeleted\"}>\r\n                </Column>\r\n            </TreeList>\r\n        </Typography>\r\n    )\r\n}","import { IUser } from \"../dto/User\";\r\n\r\nexport const users: IUser[] = [\r\n  {\r\n    id: 1,\r\n    firstName: \"Петров\",\r\n    userName: \"Вася\",\r\n    lastName: \"Петрович\",\r\n    role: {\r\n      id: 1,\r\n      name: \"Админ\",\r\n      isDeleted: false,\r\n    },\r\n  },\r\n  {\r\n    id: 2,\r\n    firstName: \"Петров1\",\r\n    userName: \"Вася1\",\r\n    lastName: \"Петрович1\",\r\n    role: {\r\n      id: 2,\r\n      name: \"Юзер\",\r\n      isDeleted: false,\r\n    },\r\n  },\r\n  {\r\n    id: 3,\r\n    firstName: \"Петров1\",\r\n    userName: \"Вася1\",\r\n    lastName: \"Петрович1\",\r\n    role: {\r\n      id: 2,\r\n      name: \"Юзер\",\r\n      isDeleted: false,\r\n    },\r\n  },\r\n  {\r\n    id: 4,\r\n    firstName: \"Петров1\",\r\n    userName: \"Вася1\",\r\n    lastName: \"Петрович1\",\r\n    role: {\r\n      id: 2,\r\n      name: \"Юзер\",\r\n      isDeleted: false,\r\n    },\r\n  },\r\n  {\r\n    id: 5,\r\n    firstName: \"Петров1\",\r\n    userName: \"Вася1\",\r\n    lastName: \"Петрович1\",\r\n    role: {\r\n      id: 2,\r\n      name: \"Юзер\",\r\n      isDeleted: false,\r\n    },\r\n  },\r\n  {\r\n    id: 6,\r\n    firstName: \"Петров1\",\r\n    userName: \"Вася1\",\r\n    lastName: \"Петрович1\",\r\n    role: {\r\n      id: 2,\r\n      name: \"Юзер\",\r\n      isDeleted: false,\r\n    },\r\n  },\r\n  {\r\n    id: 7,\r\n    firstName: \"Петров1\",\r\n    userName: \"Вася1\",\r\n    lastName: \"Петрович1\",\r\n    role: {\r\n      id: 4,\r\n      name: \"Модератор\",\r\n      isDeleted: false,\r\n    },\r\n  },\r\n  {\r\n    id: 8,\r\n    firstName: \"Петров1\",\r\n    userName: \"Вася1\",\r\n    lastName: \"Петрович1\",\r\n    role: {\r\n      id: 2,\r\n      name: \"Юзер\",\r\n      isDeleted: true,\r\n    },\r\n  },\r\n  {\r\n    id: 9,\r\n    firstName: \"Андрей\",\r\n    userName: \"Вася1\",\r\n    lastName: \"Андреевич1\",\r\n    role: {\r\n      id: 2,\r\n      name: \"Юзер\",\r\n      isDeleted: false,\r\n    },\r\n  },\r\n  {\r\n    id: 10,\r\n    firstName: \"Петров1\",\r\n    userName: \"Вася1\",\r\n    lastName: \"Петрович1\",\r\n    role: {\r\n      id: 4,\r\n      name: \"Модератор\",\r\n      isDeleted: true,\r\n    },\r\n  },\r\n  {\r\n    id: 11,\r\n    firstName: \"Петров1\",\r\n    userName: \"Коля\",\r\n    lastName: \"Петрович1\",\r\n    role: {\r\n      id: 2,\r\n      name: \"Юзер\",\r\n      isDeleted: false,\r\n    },\r\n  },\r\n  {\r\n    id: 12,\r\n    firstName: \"Петров1\",\r\n    userName: \"Вася1\",\r\n    lastName: \"Петрович1\",\r\n    role: {\r\n      id: 2,\r\n      name: \"Юзер\",\r\n      isDeleted: false,\r\n    },\r\n  },\r\n  {\r\n    id: 13,\r\n    firstName: \"Петров1\",\r\n    userName: \"Вася1\",\r\n    lastName: \"Петрович1\",\r\n    role: {\r\n      id: 2,\r\n      name: \"Юзер\",\r\n      isDeleted: false,\r\n    },\r\n  },\r\n  {\r\n    id: 14,\r\n    firstName: \"Петров1\",\r\n    userName: \"Вася1\",\r\n    lastName: \"Петрович1\",\r\n    role: {\r\n      id: 2,\r\n      name: \"Юзер\",\r\n      isDeleted: true,\r\n    },\r\n  },\r\n  {\r\n    id: 15,\r\n    firstName: \"Петров1\",\r\n    userName: \"Вася1\",\r\n    lastName: \"Петрович1\",\r\n    role: {\r\n      id: 4,\r\n      name: \"Модератор\",\r\n      isDeleted: false,\r\n    },\r\n  },\r\n];\r\n","import React from \"react\"\r\nimport { Typography } from \"@material-ui/core\"\r\nimport TreeList, { Editing, SearchPanel, Column, RequiredRule, Selection, Sorting, Scrolling, Paging, Pager } from \"devextreme-react/tree-list\"\r\nimport { users } from \"../../../api/mock/users\"\r\n\r\nconst allowedPageSizes = [5, 10, 20];\r\n\r\nexport const User = () => {\r\n    const onCellPrepared = (e: any) => {\r\n        if (e.column.command === 'edit') {\r\n            let addLink = e.cellElement.querySelector('.dx-link-add');\r\n\r\n            if (addLink) {\r\n                addLink.remove();\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Typography>\r\n            <TreeList\r\n                id=\"roles\"\r\n                dataSource={users}\r\n                showRowLines={true}\r\n                showBorders={true}\r\n                columnAutoWidth={true}\r\n                keyExpr=\"id\"\r\n                onCellPrepared={onCellPrepared}\r\n            >\r\n                <Scrolling mode=\"standard\" />\r\n                <Paging\r\n                    enabled={true}\r\n                    defaultPageSize={5} />\r\n                <Pager\r\n                    showPageSizeSelector={true}\r\n                    allowedPageSizes={allowedPageSizes}\r\n                    showInfo={true} />\r\n                <Sorting mode=\"multiple\" />\r\n                <Selection mode=\"single\" />\r\n                <SearchPanel visible={true} />\r\n                <Editing\r\n                    allowUpdating={true}\r\n                    allowDeleting={true}\r\n                    allowAdding={true}\r\n                    mode=\"row\"\r\n                />\r\n                <Column\r\n                    caption={\"Номер\"}\r\n                    visible={false}\r\n                    dataField={\"id\"}>\r\n                </Column>\r\n                <Column\r\n                    caption={\"Фамилия\"}\r\n                    dataField={\"firstName\"}>\r\n                    <RequiredRule />\r\n                </Column>\r\n                <Column\r\n                    caption={\"Имя\"}\r\n                    dataField={\"userName\"}>\r\n                    <RequiredRule />\r\n                </Column>\r\n                <Column\r\n                    caption={\"Отчество\"}\r\n                    dataField={\"lastName\"}>\r\n                    <RequiredRule />\r\n                </Column>\r\n                <Column\r\n                    caption={\"Имя роли\"}\r\n                    dataField={\"role.name\"}>\r\n                    <RequiredRule />\r\n                </Column>\r\n                <Column\r\n                    caption={\"Удалена\"}\r\n                    dataType=\"boolean\"\r\n                    dataField={\"isDeleted\"}>\r\n                </Column>\r\n            </TreeList>\r\n        </Typography>\r\n    )\r\n}","import { IApiMethod } from \"../dto/ApiMethod\";\r\n\r\nexport const apimethods: IApiMethod[] = [\r\n  {\r\n    id: 1,\r\n    name: \"Login\",\r\n    discription: \"Метод авторизации\",\r\n    pathUtl: \"login\",\r\n    httpMethod: \"POST\",\r\n    isNotNullParam: false,\r\n    isNeedAuntification: false,\r\n    isDeleted: false,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Login\",\r\n    discription: \"Метод авторизации\",\r\n    pathUtl: \"login\",\r\n    httpMethod: \"POST\",\r\n    isNotNullParam: false,\r\n    isNeedAuntification: false,\r\n    isDeleted: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Login\",\r\n    discription: \"Метод авторизации\",\r\n    pathUtl: \"login\",\r\n    httpMethod: \"POST\",\r\n    isNotNullParam: false,\r\n    isNeedAuntification: false,\r\n    isDeleted: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Login\",\r\n    discription: \"Метод авторизации\",\r\n    pathUtl: \"login\",\r\n    httpMethod: \"POST\",\r\n    isNotNullParam: false,\r\n    isNeedAuntification: false,\r\n    isDeleted: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: \"Login\",\r\n    discription: \"Метод авторизации\",\r\n    pathUtl: \"login\",\r\n    httpMethod: \"POST\",\r\n    isNotNullParam: false,\r\n    isNeedAuntification: false,\r\n    isDeleted: false,\r\n  },\r\n  {\r\n    id: 6,\r\n    name: \"Login\",\r\n    discription: \"Метод авторизации\",\r\n    pathUtl: \"login\",\r\n    httpMethod: \"POST\",\r\n    isNotNullParam: false,\r\n    isNeedAuntification: false,\r\n    isDeleted: false,\r\n  },\r\n];\r\n","import React from \"react\"\r\nimport { Typography } from \"@material-ui/core\"\r\nimport TreeList, { Editing, SearchPanel, Column, RequiredRule, Selection, Sorting, Scrolling, Paging, Pager, FilterRow } from \"devextreme-react/tree-list\"\r\nimport { apimethods } from \"../../../api/mock/apimethod\"\r\n\r\nconst allowedPageSizes = [5, 10, 20];\r\n\r\nexport const Method = () => {\r\n    const onCellPrepared = (e: any) => {\r\n        if (e.column.command === 'edit') {\r\n            let addLink = e.cellElement.querySelector('.dx-link-add');\r\n\r\n            if (addLink) {\r\n                addLink.remove();\r\n            }\r\n        }\r\n    }\r\n    return(\r\n        <Typography>\r\n            <TreeList\r\n                id=\"apimethods\"\r\n                dataSource={apimethods}\r\n                showRowLines={true}\r\n                showBorders={true}\r\n                columnAutoWidth={true}\r\n                keyExpr=\"id\"\r\n                onCellPrepared={onCellPrepared}\r\n            >\r\n               <Scrolling mode=\"standard\" />\r\n                <Paging\r\n                    enabled={true}\r\n                    defaultPageSize={5} />\r\n                <Pager\r\n                    showPageSizeSelector={true}\r\n                    allowedPageSizes={allowedPageSizes}\r\n                    showInfo={true} />\r\n                <FilterRow visible={true} />\r\n                <Sorting mode=\"multiple\" />\r\n                <Selection mode=\"single\" />\r\n                <SearchPanel visible={true} />\r\n                <Editing\r\n                    allowUpdating={true}\r\n                    allowDeleting={true}\r\n                    allowAdding={true}\r\n                    mode=\"row\"\r\n                />\r\n                <Column\r\n                    caption={\"Номер\"}\r\n                    dataType={\"number\"}\r\n                    visible={false}\r\n                    dataField={\"id\"}>\r\n                </Column>\r\n                <Column\r\n                    caption={\"Имя метода\"}\r\n                    dataType={\"string\"}\r\n                    dataField={\"name\"}>\r\n                    <RequiredRule />\r\n                </Column>\r\n                <Column\r\n                    caption={\"Описание\"}\r\n                    dataType={\"string\"}\r\n                    dataField={\"discription\"}>\r\n                    <RequiredRule />\r\n                </Column>\r\n                <Column\r\n                    caption={\"Короткий адрес\"}\r\n                    dataType={\"string\"}\r\n                    dataField={\"pathUtl\"}>\r\n                    <RequiredRule />\r\n                </Column>\r\n                <Column\r\n                    caption={\"Http Метод\"}\r\n                    dataType={\"string\"}\r\n                    dataField={\"httpMethod\"}>\r\n                    <RequiredRule />\r\n                </Column>\r\n                <Column\r\n                    caption={\"Параметры\"}\r\n                    dataField={\"isNotNullParam\"}>\r\n                    <RequiredRule />\r\n                </Column>\r\n                <Column\r\n                    caption={\"Аунтификация\"}\r\n                    dataField={\"isNeedAuntification\"}>\r\n                    <RequiredRule />\r\n                </Column>\r\n                <Column\r\n                    caption={\"Удалена\"}\r\n                    dataType=\"boolean\"\r\n                    dataField={\"isDeleted\"}>\r\n                </Column>\r\n            </TreeList>\r\n        </Typography>\r\n    )\r\n}","import React from \"react\"\r\n\r\nexport const Log = () => {\r\n    return(\r\n        <div>\r\n            Логи!!!\r\n        </div>\r\n    )\r\n}","import { IApiMethodRole } from \"../dto/ApiMethodRole\";\r\n\r\nexport const apimethodroles: IApiMethodRole[] = [\r\n  {\r\n    id: 1,\r\n    apiMethod: {\r\n      id: 1,\r\n      name: \"Login\",\r\n      discription: \"Метод авторизации\",\r\n      pathUtl: \"login\",\r\n      httpMethod: \"POST\",\r\n      isNotNullParam: false,\r\n      isNeedAuntification: false,\r\n      isDeleted: false,\r\n    },\r\n    role: {\r\n      id: 1,\r\n      name: \"Админ\",\r\n      isDeleted: false,\r\n    },\r\n    isDeleted: false,\r\n  },\r\n  {\r\n    id: 2,\r\n    apiMethod: {\r\n      id: 2,\r\n      name: \"Login\",\r\n      discription: \"Метод авторизации\",\r\n      pathUtl: \"login\",\r\n      httpMethod: \"POST\",\r\n      isNotNullParam: false,\r\n      isNeedAuntification: false,\r\n      isDeleted: false,\r\n    },\r\n    role: {\r\n      id: 2,\r\n      name: \"Юзер\",\r\n      isDeleted: false,\r\n    },\r\n    isDeleted: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    apiMethod: {\r\n      id: 3,\r\n      name: \"Login\",\r\n      discription: \"Метод авторизации\",\r\n      pathUtl: \"login\",\r\n      httpMethod: \"POST\",\r\n      isNotNullParam: false,\r\n      isNeedAuntification: false,\r\n      isDeleted: false,\r\n    },\r\n    role: {\r\n      id: 1,\r\n      name: \"Админ\",\r\n      isDeleted: false,\r\n    },\r\n    isDeleted: false,\r\n  },\r\n];\r\n","import React from \"react\"\r\nimport { Typography } from \"@material-ui/core\"\r\nimport TreeList, { Editing, SearchPanel, Column, RequiredRule, Selection, Sorting } from \"devextreme-react/tree-list\"\r\nimport { apimethodroles } from \"../../../api/mock/apimethodroles\"\r\n\r\nexport const AccessRole = () => {\r\n    const onCellPrepared = (e: any) => {\r\n        if (e.column.command === 'edit') {\r\n            let addLink = e.cellElement.querySelector('.dx-link-add');\r\n\r\n            if (addLink) {\r\n                addLink.remove();\r\n            }\r\n        }\r\n    }\r\n    return(\r\n        <Typography>\r\n        <TreeList\r\n            id=\"apimethodroles\"\r\n            dataSource={apimethodroles}\r\n            showRowLines={true}\r\n            showBorders={true}\r\n            columnAutoWidth={true}\r\n            keyExpr=\"id\"\r\n            onCellPrepared={onCellPrepared}\r\n        >\r\n            <Sorting mode=\"multiple\" />\r\n            <Selection mode=\"single\" />\r\n            <SearchPanel visible={true} />\r\n            <Editing\r\n                allowUpdating={true}\r\n                allowDeleting={true}\r\n                allowAdding={true}\r\n                mode=\"row\"\r\n            />\r\n            <Column\r\n                caption={\"Номер\"}\r\n                dataType={\"number\"}\r\n                visible={false}\r\n                dataField={\"id\"}>\r\n            </Column>\r\n            <Column\r\n                caption={\"Метод\"}\r\n                dataType={\"string\"}\r\n                dataField={\"apiMethod.name\"}>\r\n                <RequiredRule />\r\n            </Column>\r\n            <Column\r\n                caption={\"Роль\"}\r\n                dataType={\"string\"}\r\n                dataField={\"role.name\"}>\r\n                <RequiredRule />\r\n            </Column>\r\n            <Column\r\n                caption={\"Удалена\"}\r\n                dataType=\"boolean\"\r\n                dataField={\"isDeleted\"}>\r\n            </Column>\r\n        </TreeList>\r\n    </Typography>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Hidden } from '@material-ui/core';\r\nimport classnames from \"classnames\";\r\nimport { ItemListDrawer } from '../../components/itemDrawer/ItemListDrawer';\r\nimport { ItemDrawer } from '../../components/itemDrawer/ItemDrawer';\r\nimport { IDictionary } from '../../utils/interfaces';\r\nimport { Profile } from '../../components/profile/Profile';\r\nimport { Sales } from '../sales/Sales';\r\nimport { Route } from 'react-router-dom';\r\nimport { Role } from '../administration/role/Role';\r\nimport { Greeting } from '../greeting/Greeting';\r\nimport { Chart } from '../reports/chart/Chart';\r\nimport { Pharmacy } from '../directories/pharmacy/Pharmacy';\r\nimport { Preparations } from '../directories/preparation/Preparations';\r\nimport { ATH } from '../directories/ath/ATH';\r\nimport { Produced } from '../directories/produced.tsx/Produced';\r\nimport { Region } from '../directories/region/Region';\r\nimport { User } from '../administration/user/User';\r\nimport { Method } from '../administration/method/Method';\r\nimport { Log } from '../administration/log/Log';\r\nimport { AccessRole } from '../administration/accessRoles/AccessRole';\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    drawer: {\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n      },\r\n    },\r\n    appBar: {\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n      },\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n    toolbar: theme.mixins.toolbar,\r\n    toolbarLogo: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n    profile: {\r\n      marginLeft: 'auto',\r\n      display: 'flex',\r\n    },\r\n  }),\r\n);\r\ninterface ResponsiveDrawerProps {\r\n  container?: any;\r\n}\r\n\r\nexport const ResponsiveDrawer = (props: ResponsiveDrawerProps) => {\r\n  const { container } = props;\r\n  const classes = useStyles();\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n\r\n  const directories: IDictionary<string>[] = [\r\n    { 'pharmacy': 'Аптеки' },\r\n    { 'preparations': 'Препараты' },\r\n    { 'code': 'Код АТН' },\r\n    { 'produced': 'Производители' },\r\n    { 'region': 'Регионы' }]\r\n  const administration: IDictionary<string>[] = [\r\n    { 'users': 'Пользователи' },\r\n    { 'roles': 'Роли' },\r\n    { 'methods': 'Методы' },\r\n    { 'access': 'Доступ по ролям' },\r\n    { 'logs': 'Логи' }]\r\n  const reports: IDictionary<string>[] = [{ 'charts': 'Графики' }]\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classnames(classes.toolbar, classes.toolbarLogo)}>ЛОГО</div>\r\n      <Divider />\r\n      <ItemDrawer\r\n        title={\"Главная\"}\r\n        link={\"main\"}\r\n      />\r\n      <ItemDrawer\r\n        title={\"Продажи\"}\r\n        link={\"sales\"}\r\n      />\r\n      <ItemListDrawer title={\"Отчеты\"} listItems={reports} />\r\n      <ItemListDrawer title={\"Справочники\"} listItems={directories} />\r\n      <ItemListDrawer title={\"Администрирование\"} listItems={administration} />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            onClick={handleDrawerToggle}\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Responsive drawer\r\n          </Typography>\r\n          <Typography className={classes.profile}>\r\n            <Profile />\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        <Hidden smUp implementation=\"css\">\r\n          <Drawer\r\n            container={container}\r\n            variant=\"temporary\"\r\n            anchor={'left'}\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            ModalProps={{\r\n              keepMounted: true,\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n        <Hidden xsDown implementation=\"css\">\r\n          <Drawer\r\n            classes={{\r\n              paper: classes.drawerPaper,\r\n            }}\r\n            variant=\"permanent\"\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Hidden>\r\n      </nav>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <Typography paragraph>\r\n          <Route path={\"/farm-app/main/\"}>\r\n            <Greeting />\r\n          </Route>\r\n          <Route path={\"/farm-app/sales/\"}>\r\n            <Sales />\r\n          </Route>\r\n          <Route path={\"/farm-app/charts/\"}>\r\n            <Chart />\r\n          </Route>\r\n          <Route path={\"/farm-app/pharmacy/\"}>\r\n            <Pharmacy />\r\n          </Route>\r\n          <Route path={\"/farm-app/preparations/\"}>\r\n            <Preparations />\r\n          </Route>\r\n          <Route path={\"/farm-app/code/\"}>\r\n            <ATH />\r\n          </Route>\r\n          <Route path={\"/farm-app/produced/\"}>\r\n            <Produced />\r\n          </Route>\r\n          <Route path={\"/farm-app/region/\"}>\r\n            <Region />\r\n          </Route>\r\n          <Route path={\"/farm-app/users/\"}>\r\n            <User />\r\n          </Route>\r\n          <Route path={\"/farm-app/roles/\"}>\r\n            <Role />\r\n          </Route>\r\n          <Route path={\"/farm-app/methods/\"}>\r\n            <Method />\r\n          </Route>\r\n          <Route path={\"/farm-app/access/\"}>\r\n            <AccessRole />\r\n          </Route>\r\n          <Route path={\"/farm-app/logs/\"}>\r\n            <Log />\r\n          </Route>\r\n        </Typography>\r\n      </main>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { SignIn } from \"./modules/auth/SignIn\";\r\nimport { ResponsiveDrawer } from \"./modules/menu/ResponsiveDrawer\";\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nconst NotFoundRedirect = () => <Redirect to='/farm-app/' />\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/farm-app/auth/\">\r\n          <SignIn />\r\n        </Route>\r\n        <Route path=\"/farm-app/\">\r\n          <ResponsiveDrawer />\r\n        </Route>\r\n         <Route component={NotFoundRedirect} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { reducerWithInitialState } from \"typescript-fsa-reducers\";\r\nimport { login, changeTitle } from \"./AuthActions\";\r\nimport { ILoginResponse } from \"../../api/dto/Auth\";\r\n\r\ninterface State {\r\n  title: string;\r\n  loadState?: boolean;\r\n  user: ILoginResponse;\r\n  error?: Error | null;\r\n}\r\n\r\nconst initial: State = {\r\n  title: \"Please login\",\r\n  user: {\r\n    id: 0,\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    userName: \"\",\r\n    token: \"\",\r\n    role: {\r\n      id: 0,\r\n      name: \"Unauthorize\",\r\n      isDeleted: false,\r\n    },\r\n  },\r\n};\r\n\r\nexport const authReducer = reducerWithInitialState(initial)\r\n  .case(changeTitle, (state, title) => ({\r\n    ...state,\r\n    title,\r\n  }))\r\n  .case(login.async.started, (state) => ({\r\n    ...state,\r\n    loadState: true,\r\n    error: undefined,\r\n  }))\r\n  .case(login.async.done, (state, { result }) => ({\r\n    ...state,\r\n    user: result,\r\n    loadState: false,\r\n    error: undefined,\r\n  }))\r\n  .case(login.async.failed, (state, { error }) => ({\r\n    ...state,\r\n    loadState: false,\r\n    error,\r\n  }));\r\n","import { createBrowserHistory } from \"history\";\r\nimport { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { IAppState, createMainReducer } from \"../core/mainReducer\";\r\nimport { persistReducer, persistStore } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nexport const history = createBrowserHistory();\r\n\r\nconst persistWhitelist: Array<keyof IAppState> = [\"auth\"];\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n  whitelist: [\"auth\"],\r\n};\r\n\r\nconst composeEnhancers =\r\n  process.env.NODE_ENV === \"production\"\r\n    ? compose\r\n    : composeWithDevTools({\r\n        shouldHotReload: false,\r\n      });\r\n\r\nexport function configureStore() {\r\n  const middleware = [thunk];\r\n  const enhancer = composeEnhancers(applyMiddleware(...middleware));\r\n  const persistedReducer = persistReducer(persistConfig, createMainReducer());\r\n  const store = createStore(persistedReducer, enhancer);\r\n  // const store: Cards<IAppState, Action> = createStore(persistedReducer, enhancer);\r\n  const persistor = persistStore(store);\r\n  // persistor.purge();\r\n  return { store, persistor };\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createBrowserHistory } from \"history\";\r\nimport { Provider } from 'react-redux';\r\nimport { IAppDispatch } from './core/mainReducer';\r\nimport { configureStore } from './core/configureStore';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { Router } from 'react-router-dom';\r\n\r\nexport const history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\r\nexport const { store, persistor } = configureStore();\r\nexport const dispatch: IAppDispatch = store.dispatch;\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router history={history}>\r\n      <Provider store={store}>\r\n        <PersistGate loading={null} persistor={persistor}>\r\n          <App />\r\n        </PersistGate>\r\n      </Provider>\r\n    </Router>\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { Action, combineReducers } from \"redux\";\r\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\r\nimport { authReducer } from \"../store/auth/AuthState\";\r\n\r\nexport const createMainReducer = () =>\r\n  combineReducers({\r\n    auth: authReducer,\r\n  });\r\n\r\nexport interface IAppState\r\n  extends ReturnType<ReturnType<typeof createMainReducer>> {}\r\n\r\nexport interface IAppDispatch extends ThunkDispatch<IAppState, Error, Action> {}\r\n\r\nexport interface IThunkAction\r\n  extends ThunkAction<Promise<void>, IAppState, {}, Action> {}\r\n"],"sourceRoot":""}